{"version":3,"file":"ddr-core.js","sources":["../node_modules/tslib/tslib.es6.js","../src/core/index.ts","../src/core/exporter/index.ts","../src/core/exporter/excel-fixes.ts","../src/core/exporter/pdf-fixes.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n","import { DDRInstance, DDROptions, DDRConfig, APIResponse, DDREvent, ExportOptions } from \"../types\";\r\n\r\n/**\r\n * DDR核心类\r\n * 数据驱动报表的主要实现\r\n */\r\nclass DDR implements DDRInstance {\r\n  private container: HTMLElement;\r\n  private config: DDRConfig;\r\n  private data: any[] = [];\r\n  private metadata: Record<string, any> = {};\r\n  private pagination: Record<string, any> | null = null;\r\n  private filters: Record<string, any> = {};\r\n  private options: DDROptions;\r\n  private eventListeners: Map<DDREvent, Function[]> = new Map();\r\n  private formatters: Record<string, Function> = {};\r\n  private initialized: boolean = false;\r\n\r\n  /**\r\n   * 创建DDR实例\r\n   * @param options 初始化选项\r\n   * @returns DDR实例\r\n   */\r\n  static create(options: DDROptions): DDRInstance {\r\n    const instance = new DDR(options);\r\n    instance.init().catch(error => {\r\n      if (options.onError) {\r\n        options.onError(error);\r\n      } else {\r\n        console.error('DDR初始化失败:', error);\r\n      }\r\n    });\r\n    return instance;\r\n  }\r\n\r\n  /**\r\n   * 注册自定义格式化函数\r\n   * @param name 格式化函数名称\r\n   * @param formatter 格式化函数\r\n   */\r\n  static registerFormatter(name: string, formatter: Function): void {\r\n    DDR.globalFormatters[name] = formatter;\r\n  }\r\n\r\n  // 全局格式化函数\r\n  private static globalFormatters: Record<string, Function> = {\r\n    // 内置格式化函数\r\n    date: (value: string | number | Date) => {\r\n      const date = new Date(value);\r\n      return date.toLocaleDateString();\r\n    },\r\n    currency: (value: number, params?: { currency?: string, locale?: string }) => {\r\n      const { currency = 'CNY', locale = 'zh-CN' } = params || {};\r\n      return new Intl.NumberFormat(locale, {\r\n        style: 'currency',\r\n        currency\r\n      }).format(value);\r\n    },\r\n    number: (value: number, params?: { precision?: number, thousandSeparator?: boolean }) => {\r\n      const { precision = 2, thousandSeparator = true } = params || {};\r\n      const options = {\r\n        minimumFractionDigits: precision,\r\n        maximumFractionDigits: precision,\r\n        useGrouping: thousandSeparator\r\n      };\r\n      return new Intl.NumberFormat(undefined, options).format(value);\r\n    },\r\n    percentage: (value: number, params?: { precision?: number }) => {\r\n      const { precision = 2 } = params || {};\r\n      return new Intl.NumberFormat(undefined, {\r\n        style: 'percent',\r\n        minimumFractionDigits: precision,\r\n        maximumFractionDigits: precision\r\n      }).format(value);\r\n    }\r\n  };\r\n\r\n  constructor(options: DDROptions) {\r\n    this.options = options;\r\n\r\n    // 获取容器元素\r\n    if (typeof options.container === 'string') {\r\n      const el = document.querySelector(options.container);\r\n      if (!el) {\r\n        throw new Error(`找不到容器元素: ${options.container}`);\r\n      }\r\n      this.container = el as HTMLElement;\r\n    } else if (options.container instanceof HTMLElement) {\r\n      this.container = options.container;\r\n    } else {\r\n      throw new Error('无效的容器元素');\r\n    }\r\n\r\n    // 应用容器样式\r\n    this.container.classList.add('ddr-container');\r\n    if (options.theme) {\r\n      this.container.classList.add(`ddr-theme-${options.theme}`);\r\n    } else {\r\n      this.container.classList.add('ddr-theme-default');\r\n    }\r\n\r\n    // 合并本地和全局格式化函数\r\n    this.formatters = { ...DDR.globalFormatters };\r\n\r\n    // 初始化元数据\r\n    if (options.metadata) {\r\n      this.metadata = { ...options.metadata };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 初始化报表\r\n   */\r\n  async init(): Promise<void> {\r\n    try {\r\n      // 加载配置\r\n      this.config = await this._loadConfig(this.options.config);\r\n\r\n      // 获取数据\r\n      const apiResponse = await this._fetchData(this.config.dataSource);\r\n      this.data = apiResponse.records;\r\n      this.metadata = apiResponse.metadata || this.metadata;\r\n      this.pagination = apiResponse.pagination || null;\r\n\r\n      // 渲染报表\r\n      this._render();\r\n\r\n      this.initialized = true;\r\n      this._emitEvent('data-loaded', { data: this.data });\r\n\r\n      if (this.options.onLoad) {\r\n        this.options.onLoad();\r\n      }\r\n    } catch (error) {\r\n      this._emitEvent('error', { error });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 重新加载数据\r\n   * @param params 额外的查询参数\r\n   */\r\n  async reload(params?: Record<string, any>): Promise<void> {\r\n    if (!this.initialized) {\r\n      throw new Error('DDR尚未初始化');\r\n    }\r\n\r\n    try {\r\n      const apiResponse = await this._fetchData(this.config.dataSource, params);\r\n      this.data = apiResponse.records;\r\n\r\n      // 只有在API返回了元数据时才更新\r\n      if (apiResponse.metadata) {\r\n        this.metadata = apiResponse.metadata;\r\n        this._emitEvent('metadata-updated', { metadata: this.metadata });\r\n      }\r\n\r\n      this.pagination = apiResponse.pagination || null;\r\n\r\n      // 重新渲染\r\n      this._render();\r\n      this._emitEvent('data-loaded', { data: this.data });\r\n    } catch (error) {\r\n      this._emitEvent('error', { error });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 刷新元数据\r\n   */\r\n  async refreshMetadata(): Promise<void> {\r\n    if (!this.initialized) {\r\n      throw new Error('DDR尚未初始化');\r\n    }\r\n\r\n    try {\r\n      // 如果配置了独立的元数据API则使用它\r\n      if (this.config.dataSource.metadataSource) {\r\n        const response = await this._fetchMetadata(this.config.dataSource.metadataSource);\r\n        this.metadata = response.metadata || {};\r\n      } else {\r\n        // 否则重新获取所有数据\r\n        const apiResponse = await this._fetchData(this.config.dataSource);\r\n        if (apiResponse.metadata) {\r\n          this.metadata = apiResponse.metadata;\r\n        }\r\n      }\r\n\r\n      // 重新渲染表头和表尾\r\n      this._renderHeaderFooter();\r\n      this._emitEvent('metadata-updated', { metadata: this.metadata });\r\n    } catch (error) {\r\n      this._emitEvent('error', { error });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 更新元数据\r\n   * @param metadata 要更新的元数据\r\n   */\r\n  updateMetadata(metadata: Record<string, any>): void {\r\n    this.metadata = { ...this.metadata, ...metadata };\r\n\r\n    if (this.initialized) {\r\n      // 重新渲染表头和表尾\r\n      this._renderHeaderFooter();\r\n      this._emitEvent('metadata-updated', { metadata: this.metadata });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 导出为Excel或PDF\r\n   * @param type 导出类型\r\n   * @param options 导出选项\r\n   */\r\n  async exportTo(type: \"excel\" | \"pdf\", options?: ExportOptions): Promise<void> {\r\n    if (!this.initialized) {\r\n      throw new Error('DDR尚未初始化');\r\n    }\r\n\r\n    try {\r\n      this._emitEvent('export-start', { type, options });\r\n        // 导入导出模块，按需加载以减小包体积\r\n      // 修改为使用静态导入，避免代码拆分\r\n      const { Exporter } = await import('../core/exporter');\r\n\r\n      // 执行导出\r\n      if (type === 'excel') {\r\n        // Excel导出传递DOM元素以保留样式\r\n        await Exporter.toExcel(this.container, options);\r\n      } else if (type === 'pdf') {\r\n        // PDF导出传递DOM元素和配置\r\n        await Exporter.toPDF(this.container, this.config, options);\r\n      }\r\n\r\n      this._emitEvent('export-complete', {\r\n        type,\r\n        fileName: options?.fileName || `${this.config.meta.name}.${type === 'excel' ? 'xlsx' : 'pdf'}`\r\n      });\r\n    } catch (error) {\r\n      this._emitEvent('error', { error });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 销毁实例并清理资源\r\n   */\r\n  destroy(): void {\r\n    // 清除DOM\r\n    this.container.innerHTML = '';\r\n\r\n    // 移除事件监听器\r\n    this.eventListeners.clear();\r\n\r\n    // 清除引用\r\n    this.data = [];\r\n    this.metadata = {};\r\n    this.initialized = false;\r\n  }\r\n\r\n  /**\r\n   * 设置过滤条件\r\n   * @param filters 过滤条件\r\n   */\r\n  setFilter(filters: Record<string, any>): void {\r\n    this.filters = { ...this.filters, ...filters };\r\n  }\r\n\r\n  /**\r\n   * 添加事件监听\r\n   * @param event 事件名称\r\n   * @param callback 回调函数\r\n   */\r\n  on(event: DDREvent, callback: Function): void {\r\n    if (!this.eventListeners.has(event)) {\r\n      this.eventListeners.set(event, []);\r\n    }\r\n    this.eventListeners.get(event)!.push(callback);\r\n  }\r\n\r\n  /**\r\n   * 移除事件监听\r\n   * @param event 事件名称\r\n   * @param callback 回调函数\r\n   */\r\n  off(event: DDREvent, callback: Function): void {\r\n    if (this.eventListeners.has(event)) {\r\n      const callbacks = this.eventListeners.get(event)!;\r\n      const index = callbacks.indexOf(callback);\r\n      if (index !== -1) {\r\n        callbacks.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 执行打印\r\n   */\r\n  print(): void {\r\n    // 创建打印样式\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      @media print {\r\n        body * {\r\n          visibility: hidden;\r\n        }\r\n        .ddr-container, .ddr-container * {\r\n          visibility: visible;\r\n        }\r\n        .ddr-container {\r\n          position: absolute;\r\n          left: 0;\r\n          top: 0;\r\n        }\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n\r\n    // 执行打印\r\n    window.print();\r\n\r\n    // 移除打印样式\r\n    document.head.removeChild(style);\r\n  }\r\n\r\n  /**\r\n   * 获取原始数据\r\n   * @returns 数据数组\r\n   */\r\n  getData(): any[] {\r\n    return [...this.data];\r\n  }\r\n\r\n  /**\r\n   * 获取元数据\r\n   * @returns 元数据对象\r\n   */\r\n  getMetadata(): Record<string, any> {\r\n    return { ...this.metadata };\r\n  }\r\n\r\n  /**\r\n   * 从元数据中根据路径获取值\r\n   * @param path 路径，例如：\"company.name\"\r\n   * @returns 找到的值或undefined\r\n   */\r\n  private _getValueByPath(path?: string): any {\r\n    if (!path) return undefined;\r\n    return path.split('.').reduce((acc, part) =>\r\n      acc && acc[part] !== undefined ? acc[part] : undefined, this.metadata);\r\n  }\r\n\r\n  /**\r\n   * 加载配置\r\n   * @param config 配置路径或对象\r\n   * @returns 加载后的配置\r\n   */\r\n  private async _loadConfig(config: string | DDRConfig): Promise<DDRConfig> {\r\n    if (typeof config === 'string') {\r\n      // 支持本地JSON或远程API\r\n      if (config.startsWith('http')) {\r\n        const response = await fetch(config);\r\n        if (!response.ok) {\r\n          throw new Error(`加载配置失败: ${response.statusText}`);\r\n        }\r\n        return await response.json();\r\n      } else {\r\n        // 在实际项目中，可能需要根据环境调整导入方式\r\n        // 这里简化处理\r\n        try {\r\n          // 尝试从相对路径加载\r\n          const response = await fetch(config);\r\n          if (!response.ok) {\r\n            throw new Error(`加载配置失败: ${response.statusText}`);\r\n          }\r\n          return await response.json();\r\n        } catch (error) {\r\n          throw new Error(`加载配置失败: ${error instanceof Error ? error.message : String(error)}`);\r\n        }\r\n      }\r\n    } else {\r\n      return config;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取数据\r\n   * @param dataSource 数据源配置\r\n   * @param extraParams 额外的查询参数\r\n   * @returns API响应对象\r\n   */\r\n  private async _fetchData(\r\n    dataSource: DDRConfig['dataSource'],\r\n    extraParams?: Record<string, any>\r\n  ): Promise<{\r\n    records: any[];\r\n    metadata?: Record<string, any>;\r\n    pagination?: Record<string, any>;\r\n  }> {\r\n    // 如果有模拟数据则使用模拟数据\r\n    if (dataSource.mock && (!this.options.debug || window.location.hostname === 'localhost')) {\r\n      return {\r\n        records: dataSource.mock,\r\n        metadata: this.metadata\r\n      };\r\n    }\r\n\r\n    // 合并参数\r\n    const params = { ...dataSource.params, ...this.filters, ...extraParams };\r\n\r\n    // 构建请求选项\r\n    const options: RequestInit = {\r\n      method: dataSource.method || 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...(dataSource.headers || {})\r\n      }\r\n    };\r\n\r\n    // 对于POST请求，添加body\r\n    if (options.method === 'POST') {\r\n      options.body = JSON.stringify(params);\r\n    }\r\n\r\n    // 对于GET请求，添加查询参数\r\n    let url = dataSource.api;\r\n    if (options.method === 'GET' && Object.keys(params).length > 0) {\r\n      const queryParams = new URLSearchParams();\r\n      Object.entries(params).forEach(([key, value]) => {\r\n        queryParams.append(key, String(value));\r\n      });\r\n      url += `?${queryParams.toString()}`;\r\n    }\r\n\r\n    // 发送请求\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) {\r\n      throw new Error(`API请求失败: ${response.statusText}`);\r\n    }\r\n\r\n    // 解析响应\r\n    const result: APIResponse = await response.json();\r\n\r\n    // 检查API返回状态\r\n    if (!result.success) {\r\n      throw new Error(`API错误: ${result.message || `状态码 ${result.code}`}`);\r\n    }\r\n\r\n    // 提取数据\r\n    return {\r\n      records: result.data.records || [],\r\n      metadata: result.data.metadata,\r\n      pagination: result.data.pagination\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 获取元数据\r\n   * @param metadataSource 元数据源配置\r\n   * @returns 元数据对象\r\n   */\r\n  private async _fetchMetadata(metadataSource: DDRConfig['dataSource']['metadataSource']): Promise<{\r\n    metadata: Record<string, any>;\r\n  }> {\r\n    if (!metadataSource) {\r\n      throw new Error('未配置元数据源');\r\n    }\r\n\r\n    // 构建请求选项\r\n    const options: RequestInit = {\r\n      method: metadataSource.method || 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    // 对于POST请求，添加body\r\n    if (options.method === 'POST' && metadataSource.params) {\r\n      options.body = JSON.stringify(metadataSource.params);\r\n    }\r\n\r\n    // 对于GET请求，添加查询参数\r\n    let url = metadataSource.api;\r\n    if (options.method === 'GET' && metadataSource.params && Object.keys(metadataSource.params).length > 0) {\r\n      const queryParams = new URLSearchParams();\r\n      Object.entries(metadataSource.params).forEach(([key, value]) => {\r\n        queryParams.append(key, String(value));\r\n      });\r\n      url += `?${queryParams.toString()}`;\r\n    }\r\n\r\n    // 发送请求\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) {\r\n      throw new Error(`元数据API请求失败: ${response.statusText}`);\r\n    }\r\n\r\n    // 解析响应\r\n    const result: APIResponse = await response.json();\r\n\r\n    // 检查API返回状态\r\n    if (!result.success) {\r\n      throw new Error(`元数据API错误: ${result.message || `状态码 ${result.code}`}`);\r\n    }\r\n\r\n    // 提取元数据\r\n    return {\r\n      metadata: result.data.metadata || {}\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 渲染报表\r\n   */\r\n  private _render(): void {\r\n    // 清空容器\r\n    this.container.innerHTML = '';\r\n\r\n    // 创建包装器\r\n    const wrapper = document.createElement('div');\r\n    wrapper.className = 'ddr-wrapper';\r\n\r\n    // 应用布局设置\r\n    if (this.config.layout) {\r\n      if (this.config.layout.height) {\r\n        wrapper.style.height = typeof this.config.layout.height === 'number'\r\n          ? `${this.config.layout.height}px`\r\n          : this.config.layout.height;\r\n      }\r\n\r\n      if (this.config.layout.bordered) {\r\n        wrapper.classList.add('ddr-bordered');\r\n      }\r\n    }\r\n\r\n    this.container.appendChild(wrapper);\r\n\r\n    // 根据数据量选择渲染模式\r\n    const renderMode = this._determineRenderMode();\r\n    wrapper.setAttribute('data-render-mode', renderMode);\r\n\r\n    // 渲染表头和表尾\r\n    this._renderHeaderFooter(wrapper);\r\n\r\n    // 渲染数据表格\r\n    if (renderMode === 'canvas') {\r\n      this._renderCanvas(wrapper);\r\n    } else {\r\n      this._renderDOM(wrapper);\r\n    }\r\n\r\n    // 添加水印\r\n    if (this.config.features?.watermark) {\r\n      this._addWatermark(wrapper, this.config.features.watermark);\r\n    }\r\n\r\n    this._emitEvent('render-complete');\r\n  }  /**\r\n   * 渲染表头和表尾\r\n   * @param container 容器元素\r\n   */\r\n  private _renderHeaderFooter(container?: HTMLElement): void {\r\n    const wrapper = container || this.container.querySelector('.ddr-wrapper') as HTMLElement;\r\n    if (!wrapper) return;\r\n\r\n    // 移除旧的表头和表尾\r\n    const oldHeader = wrapper.querySelector('.ddr-report-header');\r\n    const oldFooter = wrapper.querySelector('.ddr-report-footer');\r\n\r\n    if (oldHeader) {\r\n      wrapper.removeChild(oldHeader);\r\n    }\r\n\r\n    if (oldFooter) {\r\n      wrapper.removeChild(oldFooter);\r\n    }\r\n\r\n    // 添加新的表头\r\n    if (this.config.header) {\r\n      const header = this._createHeader(this.config.header);\r\n      if (header) {\r\n        wrapper.insertBefore(header, wrapper.firstChild);\r\n\r\n        // 使用MutationObserver监听表头高度变化\r\n        const resizeObserver = new ResizeObserver((entries) => {\r\n          for (const entry of entries) {\r\n            // 获取准确的header高度\r\n            const headerHeight = entry.contentRect.height;\r\n            wrapper.style.setProperty('--header-height', `${headerHeight}px`);\r\n\r\n            // 确保表格容器的位置和高度正确\r\n            const tableContainer = wrapper.querySelector('.ddr-table-container') as HTMLElement;\r\n            if (tableContainer) {\r\n              // 不再直接设置top，使用margin来控制位置，避免绝对定位导致的重叠\r\n              tableContainer.style.marginTop = '10px';\r\n              tableContainer.style.maxHeight = `calc(100% - ${headerHeight + 10}px - var(--footer-height, 0px))`;\r\n            }\r\n          }\r\n        });\r\n\r\n        // 开始监听表头尺寸变化\r\n        resizeObserver.observe(header);\r\n\r\n        // 立即执行一次计算\r\n        const headerHeight = header.getBoundingClientRect().height;\r\n        wrapper.style.setProperty('--header-height', `${headerHeight}px`);\r\n\r\n        // 确保表格容器的高度和位置正确\r\n        const tableContainer = wrapper.querySelector('.ddr-table-container') as HTMLElement;\r\n        if (tableContainer) {\r\n          tableContainer.style.marginTop = '10px';\r\n          tableContainer.style.maxHeight = `calc(100% - ${headerHeight + 10}px - var(--footer-height, 0px))`;\r\n        }\r\n      }\r\n    }\r\n      // 表尾现在在_renderDOM中处理\r\n    // 初始渲染时不再在这里添加页脚，而是在渲染完表格后添加\r\n    // 这样可以确保页脚放置在表格容器之后\r\n    if (this.config.footer && this.initialized) {\r\n      // 只在刷新元数据时添加页脚\r\n      const footer = this._createFooter(this.config.footer);\r\n      if (footer) {\r\n        // 尝试查找表格容器，如果找到则在其后添加页脚\r\n        const tableContainer = wrapper.querySelector('.ddr-table-container');\r\n        if (tableContainer) {\r\n          wrapper.insertBefore(footer, tableContainer.nextSibling);\r\n        } else {\r\n          wrapper.appendChild(footer);\r\n        }\r\n      }\r\n    }\r\n  }\r\n    /**\r\n   * 创建表头\r\n   * @param headerConfig 表头配置\r\n   * @returns 表头元素\r\n   */\r\n  private _createHeader(headerConfig: DDRConfig['header']): HTMLElement | null {\r\n    if (!headerConfig) return null;\r\n\r\n    const headerElement = document.createElement('div');\r\n    headerElement.className = 'ddr-report-header';\r\n    // 不再设置固定高度，改为最小高度，让其自动适应内容\r\n    headerElement.style.minHeight = `${headerConfig.height || 80}px`;\r\n\r\n    // 创建顶部区域容器（Logo + 标题）\r\n    const topContainer = document.createElement('div');\r\n    topContainer.className = 'ddr-header-top';\r\n\r\n    // 渲染Logo\r\n    if (headerConfig.logo) {\r\n      const logoContainer = document.createElement('div');\r\n      logoContainer.className = `ddr-header-logo ddr-header-logo-${headerConfig.logo.position || 'left'}`;\r\n\r\n      const logoImg = document.createElement('img');\r\n      logoImg.alt = 'Logo';\r\n      // 优先使用元数据中的logo\r\n      logoImg.src = headerConfig.logo.metadataKey\r\n        ? this._getValueByPath(headerConfig.logo.metadataKey) || headerConfig.logo.url || ''\r\n        : headerConfig.logo.url || '';\r\n\r\n      if (headerConfig.logo.width) {\r\n        logoImg.width = headerConfig.logo.width;\r\n      }\r\n\r\n      if (headerConfig.logo.height) {\r\n        logoImg.height = headerConfig.logo.height;\r\n      }\r\n\r\n      logoContainer.appendChild(logoImg);\r\n      topContainer.appendChild(logoContainer);\r\n    }\r\n\r\n    // 创建中间标题区域\r\n    const centerContainer = document.createElement('div');\r\n    centerContainer.className = 'ddr-header-center';\r\n\r\n    // 渲染标题到中间区域\r\n    if (headerConfig.title) {\r\n      const titleText = typeof headerConfig.title === 'string'\r\n        ? headerConfig.title\r\n        : headerConfig.title.metadataPath\r\n          ? this._getValueByPath(headerConfig.title.metadataPath) || headerConfig.title.text\r\n          : headerConfig.title.text;\r\n\r\n      const titleElement = document.createElement('h2');\r\n      titleElement.className = 'ddr-header-title';\r\n      titleElement.textContent = titleText;\r\n\r\n      if (typeof headerConfig.title === 'object' && headerConfig.title.style) {\r\n        Object.assign(titleElement.style, headerConfig.title.style);\r\n      }\r\n\r\n      centerContainer.appendChild(titleElement);\r\n    }\r\n\r\n    // 渲染副标题到中间区域\r\n    if (headerConfig.subtitle) {\r\n      const subtitleElement = document.createElement('div');\r\n      subtitleElement.className = 'ddr-header-subtitle';\r\n      subtitleElement.textContent = headerConfig.subtitle;\r\n      centerContainer.appendChild(subtitleElement);\r\n    }\r\n\r\n    topContainer.appendChild(centerContainer);\r\n    headerElement.appendChild(topContainer);\r\n\r\n    // 渲染字段\r\n    if (headerConfig.fields && headerConfig.fields.length > 0) {\r\n      const fieldsContainer = document.createElement('div');\r\n      fieldsContainer.className = 'ddr-header-fields';\r\n\r\n      const leftFields = document.createElement('div');\r\n      leftFields.className = 'ddr-header-fields-left';\r\n\r\n      const rightFields = document.createElement('div');\r\n      rightFields.className = 'ddr-header-fields-right';\r\n\r\n      headerConfig.fields.forEach(field => {\r\n        const fieldElement = document.createElement('div');\r\n        fieldElement.className = 'ddr-header-field';\r\n\r\n        // 创建标签\r\n        const labelElement = document.createElement('span');\r\n        labelElement.className = 'ddr-field-label';\r\n        labelElement.textContent = field.label || '';\r\n        fieldElement.appendChild(labelElement);\r\n\r\n        // 创建值\r\n        const valueElement = document.createElement('span');\r\n        valueElement.className = 'ddr-field-value';\r\n\r\n        // 优先从元数据获取值\r\n        let value = field.metadataPath\r\n          ? this._getValueByPath(field.metadataPath)\r\n          : field.value || '';\r\n\r\n        // 应用格式化函数(如果有)\r\n        if (value !== undefined && field.formatter && this.formatters[field.formatter]) {\r\n          value = this.formatters[field.formatter](value);\r\n        }\r\n\r\n        valueElement.textContent = value !== undefined ? String(value) : '';\r\n        fieldElement.appendChild(valueElement);\r\n\r\n        // 应用自定义样式\r\n        if (field.style) {\r\n          Object.assign(fieldElement.style, field.style);\r\n        }\r\n\r\n        // 根据位置添加到左侧或右侧\r\n        if (field.position === 'right') {\r\n          rightFields.appendChild(fieldElement);\r\n        } else {\r\n          leftFields.appendChild(fieldElement);\r\n        }\r\n      });\r\n\r\n      fieldsContainer.appendChild(leftFields);\r\n      fieldsContainer.appendChild(rightFields);\r\n      headerElement.appendChild(fieldsContainer);\r\n    }\r\n\r\n    return headerElement;\r\n  }\r\n\r\n  /**\r\n   * 创建表尾\r\n   * @param footerConfig 表尾配置\r\n   * @returns 表尾元素\r\n   */  private _createFooter(footerConfig: DDRConfig['footer']): HTMLElement | null {\r\n    if (!footerConfig) return null;\r\n\r\n    const footerElement = document.createElement('div');\r\n    footerElement.className = 'ddr-report-footer';\r\n    // 改为最小高度而不是固定高度，允许内容增加时自动扩展\r\n    footerElement.style.minHeight = `${footerConfig.height || 100}px`;\r\n\r\n    // 如果需要固定在底部\r\n    if (footerConfig.fixed) {\r\n      footerElement.classList.add('ddr-footer-fixed');\r\n    }\r\n\r\n    // 渲染汇总行\r\n    if (footerConfig.summary && footerConfig.summary.length > 0) {\r\n      const summaryElement = document.createElement('div');\r\n      summaryElement.className = 'ddr-footer-summary';\r\n\r\n      footerConfig.summary.forEach(summaryConfig => {\r\n        const summaryItem = document.createElement('div');\r\n        summaryItem.className = 'ddr-summary-item';\r\n\r\n        const labelElement = document.createElement('span');\r\n        labelElement.className = 'ddr-summary-label';\r\n        labelElement.textContent = `${summaryConfig.column}合计:`;\r\n\r\n        const valueElement = document.createElement('span');\r\n        valueElement.className = 'ddr-summary-value';\r\n\r\n        // 获取汇总值，优先使用元数据中的预计算值\r\n        let summaryValue;\r\n        if (summaryConfig.metadataPath) {\r\n          summaryValue = this._getValueByPath(summaryConfig.metadataPath);\r\n        } else {\r\n          // 前端计算汇总值\r\n          summaryValue = this._calculateSummary(this.data, summaryConfig);\r\n        }\r\n\r\n        // 应用格式化函数(如果有)\r\n        if (summaryConfig.formatter && this.formatters[summaryConfig.formatter]) {\r\n          summaryValue = this.formatters[summaryConfig.formatter](summaryValue);\r\n        }\r\n\r\n        valueElement.textContent = summaryValue !== undefined ? String(summaryValue) : '';\r\n\r\n        summaryItem.appendChild(labelElement);\r\n        summaryItem.appendChild(valueElement);\r\n        summaryElement.appendChild(summaryItem);\r\n      });\r\n\r\n      footerElement.appendChild(summaryElement);\r\n    }\r\n\r\n    // 渲染字段\r\n    if (footerConfig.fields && footerConfig.fields.length > 0) {\r\n      const fieldsContainer = document.createElement('div');\r\n      fieldsContainer.className = 'ddr-footer-fields';\r\n\r\n      footerConfig.fields.forEach(field => {\r\n        const fieldElement = document.createElement('div');\r\n        fieldElement.className = `ddr-footer-field ddr-align-${field.position || 'left'}`;\r\n\r\n        // 创建标签\r\n        const labelElement = document.createElement('span');\r\n        labelElement.className = 'ddr-field-label';\r\n        labelElement.textContent = field.label || '';\r\n        fieldElement.appendChild(labelElement);\r\n\r\n        // 创建值\r\n        const valueElement = document.createElement('span');\r\n        valueElement.className = 'ddr-field-value';\r\n\r\n        // 优先从元数据获取值\r\n        let value = field.metadataPath\r\n          ? this._getValueByPath(field.metadataPath)\r\n          : field.value || '';\r\n\r\n        // 应用格式化函数(如果有)\r\n        if (value !== undefined && field.formatter && this.formatters[field.formatter]) {\r\n          value = this.formatters[field.formatter](value);\r\n        }\r\n\r\n        valueElement.textContent = value !== undefined ? String(value) : '';\r\n        fieldElement.appendChild(valueElement);\r\n\r\n        // 应用自定义样式\r\n        if (field.style) {\r\n          Object.assign(fieldElement.style, field.style);\r\n        }\r\n\r\n        fieldsContainer.appendChild(fieldElement);\r\n      });\r\n\r\n      footerElement.appendChild(fieldsContainer);\r\n    }\r\n\r\n    // 渲染签名区域\r\n    if (footerConfig.signatures && footerConfig.signatures.length > 0) {\r\n      const signaturesElement = document.createElement('div');\r\n      signaturesElement.className = 'ddr-footer-signatures';\r\n\r\n      footerConfig.signatures.forEach(signature => {\r\n        const signatureItem = document.createElement('div');\r\n        signatureItem.className = 'ddr-signature-item';\r\n\r\n        // 签名标签\r\n        const labelElement = document.createElement('div');\r\n        labelElement.className = 'ddr-signature-label';\r\n        labelElement.textContent = signature.label || '';\r\n        signatureItem.appendChild(labelElement);\r\n\r\n        // 签名人\r\n        const nameElement = document.createElement('div');\r\n        nameElement.className = 'ddr-signature-name';\r\n\r\n        // 优先从元数据获取签名人\r\n        const name = signature.metadataPath\r\n          ? this._getValueByPath(signature.metadataPath)\r\n          : signature.name || '';\r\n\r\n        nameElement.textContent = name || '';\r\n        signatureItem.appendChild(nameElement);\r\n\r\n        // 日期\r\n        if (signature.showTimestamp) {\r\n          const dateElement = document.createElement('div');\r\n          dateElement.className = 'ddr-signature-date';\r\n\r\n          // 获取时间戳\r\n          const timestamp = signature.dateMetadataPath\r\n            ? this._getValueByPath(signature.dateMetadataPath)\r\n            : null;\r\n\r\n          if (timestamp) {\r\n            dateElement.textContent = new Date(timestamp).toLocaleDateString();\r\n          }\r\n\r\n          signatureItem.appendChild(dateElement);\r\n        }\r\n\r\n        if (signature.width) {\r\n          signatureItem.style.width = `${signature.width}px`;\r\n        }\r\n\r\n        signaturesElement.appendChild(signatureItem);\r\n      });\r\n\r\n      footerElement.appendChild(signaturesElement);\r\n    }\r\n\r\n    // 渲染注释\r\n    if (footerConfig.notes) {\r\n      const notesElement = document.createElement('div');\r\n      notesElement.className = 'ddr-footer-notes';\r\n      notesElement.textContent = footerConfig.notes;\r\n      footerElement.appendChild(notesElement);\r\n    }\r\n\r\n    // 渲染页码信息\r\n    if (footerConfig.pageInfo && this.pagination) {\r\n      const pageElement = document.createElement('div');\r\n      pageElement.className = `ddr-footer-page ddr-align-${footerConfig.pageInfo.position || 'right'}`;\r\n\r\n      // 格式化页码\r\n      const pageText = footerConfig.pageInfo.format\r\n        .replace('{current}', String(this.pagination.pageNumber || 1))\r\n        .replace('{total}', String(this.pagination.totalPages || 1));\r\n\r\n      pageElement.textContent = pageText;\r\n      footerElement.appendChild(pageElement);\r\n    }\r\n\r\n    return footerElement;\r\n  }\r\n\r\n  /**\r\n   * 计算汇总值\r\n   * @param data 数据数组\r\n   * @param summary 汇总配置\r\n   * @returns 汇总值\r\n   */\r\n  private _calculateSummary(data: any[], summary: { column: string; type: string; }): any {\r\n    if (!data.length) return 0;\r\n\r\n    const values = data.map(item => {\r\n      const value = item[summary.column];\r\n      return typeof value === 'number' ? value : 0;\r\n    });\r\n\r\n    switch (summary.type) {\r\n      case 'sum':\r\n        return values.reduce((sum, val) => sum + val, 0);\r\n      case 'avg':\r\n        return values.reduce((sum, val) => sum + val, 0) / values.length;\r\n      case 'count':\r\n        return values.length;\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 确定渲染模式\r\n   * @returns 渲染模式 'dom' 或 'canvas'\r\n   */\r\n  private _determineRenderMode(): 'dom' | 'canvas' {\r\n    // 如果用户指定了渲染模式\r\n    if (this.options.mode === 'dom' || this.options.mode === 'canvas') {\r\n      return this.options.mode;\r\n    }\r\n\r\n    // 根据数据量自动选择\r\n    if (this.data.length > 5000) {\r\n      return 'canvas';\r\n    }\r\n\r\n    return 'dom';\r\n  }\r\n    /**\r\n   * DOM模式渲染\r\n   * @param container 容器元素\r\n   */  private _renderDOM(container: HTMLElement): void {\r\n    // 创建表格容器\r\n    const tableContainer = document.createElement('div');\r\n    tableContainer.className = 'ddr-table-container';    // 检查是否有报表头部，如果有，确保表格容器有正确的top值\r\n    const headerElement = container.querySelector('.ddr-report-header') as HTMLElement;\r\n    if (headerElement) {\r\n      // 使用ResizeObserver监听表头实际高度变化\r\n      if (window.ResizeObserver) {\r\n        const resizeObserver = new ResizeObserver(entries => {\r\n          for (const entry of entries) {\r\n            if (entry.target === headerElement) {\r\n              const contentRect = entry.contentRect;\r\n              const headerHeight = contentRect.height;\r\n              // 更新CSS变量\r\n              container.style.setProperty('--header-height', `${headerHeight}px`);\r\n              container.style.setProperty('--table-offset-top', `${headerHeight}px`);\r\n              // 确保表格容器有足够的间距\r\n              tableContainer.style.marginTop = '20px';\r\n            }\r\n          }\r\n        });\r\n        resizeObserver.observe(headerElement);\r\n      } else {\r\n        // 兼容性方案：使用getBoundingClientRect和resize事件监听\r\n        const updateHeaderSize = () => {\r\n          const headerHeight = headerElement.getBoundingClientRect().height;\r\n          container.style.setProperty('--header-height', `${headerHeight}px`);\r\n          container.style.setProperty('--table-offset-top', `${headerHeight}px`);\r\n          tableContainer.style.marginTop = '20px';\r\n        };\r\n\r\n        updateHeaderSize(); // 立即执行一次\r\n        window.addEventListener('resize', updateHeaderSize);\r\n      }\r\n    }\r\n\r\n    const tableWrapper = document.createElement('div');\r\n    tableWrapper.className = 'ddr-table-wrapper';\r\n\r\n    const table = document.createElement('table');\r\n    table.className = 'ddr-table';\r\n\r\n    // 应用表格样式\r\n    if (this.config.layout) {\r\n      if (this.config.layout.stripe) {\r\n        table.classList.add('ddr-table-stripe');\r\n      }\r\n\r\n      if (this.config.layout.hover) {\r\n        table.classList.add('ddr-table-hover');\r\n      }\r\n    }\r\n\r\n    // 创建表头\r\n    const thead = this._createTableHeader(this.config.columns);\r\n    table.appendChild(thead);\r\n\r\n    // 创建表体\r\n    const tbody = this._createTableBody(this.config.columns, this.data);\r\n    table.appendChild(tbody);\r\n      tableWrapper.appendChild(table);\r\n    tableContainer.appendChild(tableWrapper);\r\n    container.appendChild(tableContainer);\r\n      // 如果需要分页\r\n    if (this.config.features?.pagination && this.pagination) {\r\n      const paginationElement = this._createPagination(this.pagination);\r\n      container.appendChild(paginationElement);\r\n    }\r\n\r\n    // 在渲染完表格后，单独处理页脚添加\r\n    if (this.config.footer) {\r\n      const footer = this._createFooter(this.config.footer);\r\n      if (footer) {\r\n        // 确保页脚在表格容器之后添加，而不是包装在ddr-table-container内部\r\n        container.appendChild(footer);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Canvas模式渲染(大数据量)\r\n   * @param container 容器元素\r\n   */\r\n  private _renderCanvas(container: HTMLElement): void {\r\n    // 对于实际项目，可能需要引入专门的Canvas渲染库\r\n    // 这里简化处理，仅显示一个提示信息\r\n    const placeholder = document.createElement('div');\r\n    placeholder.className = 'ddr-canvas-placeholder';\r\n    placeholder.textContent = `使用Canvas模式渲染${this.data.length}行数据`;\r\n    container.appendChild(placeholder);\r\n\r\n    console.log('实际项目中需要实现Canvas渲染引擎');\r\n\r\n    // 在实际应用中，这里会引入Canvas渲染引擎\r\n    // 例如: await import('../core/render-engine/canvas-renderer')\r\n  }\r\n\r\n  /**\r\n   * 创建表头\r\n   * @param columns 列配置\r\n   * @returns 表头元素\r\n   */\r\n  private _createTableHeader(columns: Array<any>): HTMLElement {\r\n    const thead = document.createElement('thead');\r\n    thead.className = 'ddr-thead';\r\n\r\n    // 处理嵌套表头的情况\r\n    const rowCount = this._calculateHeaderRowCount(columns);\r\n    const rows: HTMLElement[] = Array(rowCount).fill(null).map(() => {\r\n      const tr = document.createElement('tr');\r\n      tr.className = 'ddr-header-row';\r\n      return tr;\r\n    });\r\n\r\n    // 填充表头单元格\r\n    this._fillHeaderCells(columns, rows, 0, 0);\r\n\r\n    // 将行添加到表头\r\n    rows.forEach(row => {\r\n      thead.appendChild(row);\r\n    });\r\n\r\n    return thead;\r\n  }\r\n\r\n  /**\r\n   * 计算表头行数\r\n   * @param columns 列配置\r\n   * @returns 行数\r\n   */\r\n  private _calculateHeaderRowCount(columns: Array<any>): number {\r\n    let maxDepth = 1;\r\n\r\n    const traverse = (cols: Array<any>, currentDepth: number = 1): void => {\r\n      cols.forEach(col => {\r\n        if (col.children && col.children.length) {\r\n          maxDepth = Math.max(maxDepth, currentDepth + 1);\r\n          traverse(col.children, currentDepth + 1);\r\n        }\r\n      });\r\n    };\r\n\r\n    traverse(columns);\r\n    return maxDepth;\r\n  }\r\n\r\n  /**\r\n   * 填充表头单元格\r\n   * @param columns 列配置\r\n   * @param rows 行元素数组\r\n   * @param rowIndex 当前行索引\r\n   * @param colIndex 当前列索引\r\n   * @returns 占用的列数\r\n   */\r\n  private _fillHeaderCells(\r\n    columns: Array<any>,\r\n    rows: HTMLElement[],\r\n    rowIndex: number,\r\n    colIndex: number\r\n  ): number {\r\n    let currentColIndex = colIndex;\r\n\r\n    columns.forEach(column => {\r\n      const cell = document.createElement('th');\r\n      cell.className = 'ddr-header-cell';\r\n      cell.textContent = column.title;\r\n\r\n      // 设置单元格样式\r\n      if (column.align) {\r\n        cell.style.textAlign = column.align;\r\n      }\r\n\r\n      if (column.width) {\r\n        cell.style.width = typeof column.width === 'number' ? `${column.width}px` : column.width;\r\n      }\r\n\r\n      // 如果有子列，则设置colspan和rowspan\r\n      if (column.children && column.children.length) {\r\n        const childColSpan = this._fillHeaderCells(column.children, rows, rowIndex + 1, currentColIndex);\r\n        cell.colSpan = childColSpan;\r\n        cell.rowSpan = 1;\r\n        currentColIndex += childColSpan;\r\n      } else {\r\n        cell.colSpan = 1;\r\n        cell.rowSpan = rows.length - rowIndex;\r\n        currentColIndex += 1;\r\n      }\r\n\r\n      rows[rowIndex].appendChild(cell);\r\n    });\r\n\r\n    return currentColIndex - colIndex;\r\n  }\r\n\r\n  /**\r\n   * 创建表体\r\n   * @param columns 列配置\r\n   * @param data 数据数组\r\n   * @returns 表体元素\r\n   */\r\n  private _createTableBody(columns: Array<any>, data: Array<any>): HTMLElement {\r\n    const tbody = document.createElement('tbody');\r\n    tbody.className = 'ddr-tbody';\r\n\r\n    // 获取扁平化的列\r\n    const flatColumns = this._getFlatColumns(columns);\r\n\r\n    // 如果没有数据，显示空表格提示\r\n    if (!data.length) {\r\n      const emptyRow = document.createElement('tr');\r\n      emptyRow.className = 'ddr-empty-row';\r\n\r\n      const emptyCell = document.createElement('td');\r\n      emptyCell.className = 'ddr-empty-cell';\r\n      emptyCell.colSpan = flatColumns.length;\r\n      emptyCell.textContent = this.config.features?.emptyText || '暂无数据';\r\n\r\n      emptyRow.appendChild(emptyCell);\r\n      tbody.appendChild(emptyRow);\r\n      return tbody;\r\n    }\r\n\r\n    // 创建行\r\n    data.forEach((rowData, rowIndex) => {\r\n      const row = document.createElement('tr');\r\n      row.className = 'ddr-body-row';\r\n      row.setAttribute('data-index', String(rowIndex));\r\n\r\n      // 创建单元格\r\n      flatColumns.forEach(column => {\r\n        // 跳过隐藏列\r\n        if (column.visible === false) {\r\n          return;\r\n        }\r\n\r\n        // 检查是否需要合并单元格\r\n        if (column.merge) {\r\n          // 需要实现单元格合并逻辑\r\n          // 这里简化处理\r\n        }\r\n\r\n        const cell = document.createElement('td');\r\n        cell.className = 'ddr-body-cell';\r\n\r\n        // 获取单元格值\r\n        let value = rowData[column.key];\r\n\r\n        // 应用格式化函数\r\n        if (column.formatter) {\r\n          if (typeof column.formatter === 'string' && this.formatters[column.formatter]) {\r\n            value = this.formatters[column.formatter](value);\r\n          } else if (typeof column.formatter === 'object') {\r\n            const formatterFunc = this.formatters[column.formatter.type];\r\n            if (formatterFunc) {\r\n              value = formatterFunc(value, column.formatter.params);\r\n            }\r\n          }\r\n        }\r\n\r\n        // 设置单元格内容\r\n        cell.textContent = value !== undefined && value !== null ? String(value) : '';\r\n\r\n        // 设置单元格样式\r\n        if (column.align) {\r\n          cell.style.textAlign = column.align;\r\n        }\r\n\r\n        // 应用条件样式\r\n        if (column.style?.conditional) {\r\n          column.style.conditional.forEach((condition: { when: string; style: Record<string, any> }) => {\r\n            // 简单条件表达式解析\r\n            // 实际项目中可能需要更复杂的表达式解析\r\n            const valueToCheck = rowData[column.key];\r\n            try {\r\n              const result = this._evaluateCondition(condition.when, { value: valueToCheck, row: rowData });\r\n              if (result) {\r\n                Object.assign(cell.style, condition.style);\r\n              }\r\n            } catch (e) {\r\n              console.error('条件解析错误:', e);\r\n            }\r\n          });\r\n        }\r\n\r\n        row.appendChild(cell);\r\n      });\r\n\r\n      tbody.appendChild(row);\r\n    });\r\n\r\n    return tbody;\r\n  }\r\n\r\n  /**\r\n   * 评估条件表达式\r\n   * @param condition 条件表达式\r\n   * @param context 上下文对象\r\n   * @returns 条件结果\r\n   */\r\n  private _evaluateCondition(condition: string, context: Record<string, any>): boolean {\r\n    // 简化版条件表达式解析\r\n    // 实际项目中可能需要更复杂的表达式解析\r\n    try {\r\n      // 简单替换，支持value和row变量\r\n      let expression = condition;\r\n\r\n      // 替换 value 变量\r\n      expression = expression.replace(/value/g, JSON.stringify(context.value));\r\n\r\n      // 替换 row.xxx 变量\r\n      const rowVarMatches = expression.match(/row\\.\\w+/g);\r\n      if (rowVarMatches) {\r\n        rowVarMatches.forEach(match => {\r\n          const prop = match.split('.')[1];\r\n          expression = expression.replace(match, JSON.stringify(context.row[prop]));\r\n        });\r\n      }\r\n\r\n      // 使用Function构造函数执行表达式\r\n      // 注意：这种方式在实际项目中可能存在安全风险\r\n      return new Function(`return ${expression}`)();\r\n    } catch (e) {\r\n      console.error('条件解析错误:', e, condition);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取扁平化的列配置\r\n   * @param columns 列配置\r\n   * @returns 扁平化后的列配置\r\n   */\r\n  private _getFlatColumns(columns: Array<any>): Array<any> {\r\n    const result: Array<any> = [];\r\n\r\n    const flatten = (cols: Array<any>) => {\r\n      cols.forEach(col => {\r\n        if (col.children && col.children.length) {\r\n          flatten(col.children);\r\n        } else {\r\n          result.push(col);\r\n        }\r\n      });\r\n    };\r\n\r\n    flatten(columns);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * 创建分页组件\r\n   * @param pagination 分页信息\r\n   * @returns 分页元素\r\n   */\r\n  private _createPagination(pagination: Record<string, any>): HTMLElement {\r\n    const paginationElement = document.createElement('div');\r\n    paginationElement.className = 'ddr-pagination';\r\n\r\n    const pageInfo = document.createElement('span');\r\n    pageInfo.className = 'ddr-pagination-info';\r\n    pageInfo.textContent = `第${pagination.pageNumber || 1}页/共${pagination.totalPages || 1}页`;\r\n    paginationElement.appendChild(pageInfo);\r\n\r\n    // 上一页按钮\r\n    const prevBtn = document.createElement('button');\r\n    prevBtn.className = 'ddr-pagination-prev';\r\n    prevBtn.textContent = '上一页';\r\n    prevBtn.disabled = (pagination.pageNumber || 1) <= 1;\r\n    prevBtn.onclick = () => {\r\n      this.reload({ ...this.filters, pageNumber: (pagination.pageNumber || 1) - 1 });\r\n    };\r\n    paginationElement.appendChild(prevBtn);\r\n\r\n    // 页码按钮\r\n    const totalPages = pagination.totalPages || 1;\r\n    const currentPage = pagination.pageNumber || 1;\r\n\r\n    // 简单分页逻辑\r\n    let startPage = Math.max(1, currentPage - 2);\r\n    let endPage = Math.min(totalPages, startPage + 4);\r\n\r\n    // 调整startPage\r\n    startPage = Math.max(1, endPage - 4);\r\n\r\n    for (let i = startPage; i <= endPage; i++) {\r\n      const pageBtn = document.createElement('button');\r\n      pageBtn.className = `ddr-pagination-page${i === currentPage ? ' active' : ''}`;\r\n      pageBtn.textContent = String(i);\r\n      pageBtn.onclick = () => {\r\n        if (i !== currentPage) {\r\n          this.reload({ ...this.filters, pageNumber: i });\r\n        }\r\n      };\r\n      paginationElement.appendChild(pageBtn);\r\n    }\r\n\r\n    // 下一页按钮\r\n    const nextBtn = document.createElement('button');\r\n    nextBtn.className = 'ddr-pagination-next';\r\n    nextBtn.textContent = '下一页';\r\n    nextBtn.disabled = (pagination.pageNumber || 1) >= (pagination.totalPages || 1);\r\n    nextBtn.onclick = () => {\r\n      this.reload({ ...this.filters, pageNumber: (pagination.pageNumber || 1) + 1 });\r\n    };\r\n    paginationElement.appendChild(nextBtn);\r\n\r\n    // 每页条数选择\r\n    const sizeSelect = document.createElement('select');\r\n    sizeSelect.className = 'ddr-pagination-size';\r\n    [10, 20, 50, 100].forEach(size => {\r\n      const option = document.createElement('option');\r\n      option.value = String(size);\r\n      option.textContent = `${size}条/页`;\r\n      option.selected = size === (pagination.pageSize || 20);\r\n      sizeSelect.appendChild(option);\r\n    });\r\n    sizeSelect.onchange = (e) => {\r\n      const pageSize = Number((e.target as HTMLSelectElement).value);\r\n      this.reload({ ...this.filters, pageSize, pageNumber: 1 });\r\n    };\r\n    paginationElement.appendChild(sizeSelect);\r\n\r\n    return paginationElement;\r\n  }\r\n    /**\r\n   * 添加水印\r\n   * @param container 容器元素\r\n   * @param text 水印文本\r\n   */\r\n  private _addWatermark(container: HTMLElement, text: string): void {\r\n    // 移除现有水印\r\n    const existingWatermark = container.querySelector('.ddr-watermark');\r\n    if (existingWatermark) {\r\n      container.removeChild(existingWatermark);\r\n    }\r\n\r\n    const watermark = document.createElement('div');\r\n    watermark.className = 'ddr-watermark';\r\n\r\n    // 确保水印始终可见\r\n    watermark.style.zIndex = '10';\r\n\r\n    // 处理动态替换\r\n    if (text.includes('${')) {\r\n      text = text.replace(/\\${([^}]+)}/g, (match, key) => {\r\n        return String(this._getValueByPath(key) || match);\r\n      });\r\n    }\r\n\r\n    // 计算需要创建多少行和列的水印\r\n    const rows = 5;\r\n    const cols = 4;\r\n\r\n    // 创建水印网格\r\n    for (let i = 0; i < rows * cols; i++) {\r\n      const content = document.createElement('div');\r\n      content.className = 'ddr-watermark-content';\r\n      content.textContent = text;\r\n      // 增加不透明度，提高可见性\r\n      content.style.opacity = '0.2';\r\n      content.style.color = 'rgba(0, 0, 0, 0.25)';\r\n      content.style.fontSize = '18px';\r\n      watermark.appendChild(content);\r\n    }\r\n\r\n    // 设置水印层的位置并防止水印被篡改\r\n    Object.defineProperty(watermark.style, 'pointerEvents', {\r\n      value: 'none',\r\n      writable: false\r\n    });\r\n\r\n    container.appendChild(watermark);\r\n      // 增强版：防止水印被删除或修改的监视器\r\n    const observer = new MutationObserver((mutations) => {\r\n      mutations.forEach((mutation) => {\r\n        // 检查水印是否被移除\r\n        if (mutation.type === 'childList' &&\r\n            Array.from(mutation.removedNodes).some(node =>\r\n              node === watermark ||\r\n              (node instanceof Element && node.querySelector('.ddr-watermark')))\r\n           ) {\r\n          if (!container.contains(watermark)) {\r\n            // 如果水印被移除，重新添加它\r\n            const newWatermark = watermark.cloneNode(true) as HTMLElement;\r\n            setTimeout(() => container.appendChild(newWatermark), 100);\r\n          }\r\n        }\r\n\r\n        // 检查水印样式是否被修改\r\n        if (mutation.type === 'attributes' &&\r\n            mutation.target === watermark &&\r\n            (mutation.attributeName === 'style' || mutation.attributeName === 'class')) {\r\n          // 恢复水印样式\r\n          watermark.className = 'ddr-watermark';\r\n          watermark.style.zIndex = '10';\r\n          watermark.style.opacity = '0.8';\r\n        }\r\n      });\r\n    });\r\n\r\n    // 监视子元素变化和属性变化\r\n    observer.observe(container, {\r\n      childList: true,\r\n      subtree: true,\r\n      attributes: true,\r\n      attributeFilter: ['style', 'class']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 准备导出数据\r\n   * @param options 导出选项\r\n   * @returns 导出数据\r\n   */\r\n  private _prepareExportData(options?: ExportOptions): any[] {\r\n    // 获取扁平化的列\r\n    const flatColumns = this._getFlatColumns(this.config.columns);\r\n\r\n    // 过滤隐藏列\r\n    const visibleColumns = flatColumns.filter(col =>\r\n      col.visible !== false && (options?.includeHidden || col.visible !== false)\r\n    );\r\n\r\n    // 准备表头\r\n    const result = [];\r\n\r\n    // 添加表头信息(如果需要)\r\n    if (options?.includeHeader !== false && this.config.header?.showOnExport !== false) {\r\n      if (this.config.header?.title) {\r\n        const titleText = typeof this.config.header.title === 'string'\r\n          ? this.config.header.title\r\n          : this.config.header.title.text;\r\n\r\n        result.push([titleText]);\r\n        result.push([]); // 空行\r\n      }\r\n\r\n      if (this.config.header?.fields?.length) {\r\n        this.config.header.fields.forEach(field => {\r\n          const value = field.metadataPath\r\n            ? this._getValueByPath(field.metadataPath)\r\n            : field.value || '';\r\n\r\n          result.push([`${field.label || ''}`, value]);\r\n        });\r\n\r\n        result.push([]); // 空行\r\n      }\r\n    }\r\n\r\n    // 添加表格标题行\r\n    const headers = visibleColumns.map(col => col.title);\r\n    result.push(headers);\r\n\r\n    // 添加数据行\r\n    this.data.forEach(rowData => {\r\n      const row = visibleColumns.map(column => {\r\n        let value = rowData[column.key];\r\n\r\n        // 应用格式化函数\r\n        if (column.formatter) {\r\n          if (typeof column.formatter === 'string' && this.formatters[column.formatter]) {\r\n            value = this.formatters[column.formatter](value);\r\n          } else if (typeof column.formatter === 'object') {\r\n            const formatterFunc = this.formatters[column.formatter.type];\r\n            if (formatterFunc) {\r\n              value = formatterFunc(value, column.formatter.params);\r\n            }\r\n          }\r\n        }\r\n\r\n        return value;\r\n      });\r\n\r\n      result.push(row);\r\n    });\r\n\r\n    // 添加表尾信息(如果需要)\r\n    if (options?.includeFooter !== false && this.config.footer?.showOnExport !== false) {\r\n      result.push([]); // 空行\r\n\r\n      // 添加汇总信息\r\n      if (this.config.footer?.summary?.length) {\r\n        this.config.footer.summary.forEach(sum => {\r\n          let summaryValue;\r\n          if (sum.metadataPath) {\r\n            summaryValue = this._getValueByPath(sum.metadataPath);\r\n          } else {\r\n            summaryValue = this._calculateSummary(this.data, sum);\r\n          }\r\n\r\n          if (sum.formatter && this.formatters[sum.formatter]) {\r\n            summaryValue = this.formatters[sum.formatter](summaryValue);\r\n          }\r\n\r\n          result.push([`${sum.column}合计:`, summaryValue]);\r\n        });\r\n\r\n        result.push([]); // 空行\r\n      }\r\n\r\n      // 添加表尾字段\r\n      if (this.config.footer?.fields?.length) {\r\n        this.config.footer.fields.forEach(field => {\r\n          const value = field.metadataPath\r\n            ? this._getValueByPath(field.metadataPath)\r\n            : field.value || '';\r\n\r\n          result.push([field.label || '', value]);\r\n        });\r\n      }\r\n        // 添加签名信息\r\n      if (this.config.footer?.signatures?.length) {\r\n        const signatureRow: string[] = [];\r\n\r\n        this.config.footer.signatures.forEach(signature => {\r\n          signatureRow.push(signature.label || '');\r\n\r\n          const name = signature.metadataPath\r\n            ? this._getValueByPath(signature.metadataPath)\r\n            : signature.name || '';\r\n\r\n          signatureRow.push(name);\r\n        });\r\n\r\n        result.push(signatureRow);\r\n      }\r\n\r\n      // 添加注释\r\n      if (this.config.footer?.notes) {\r\n        result.push([this.config.footer.notes]);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * 触发事件\r\n   * @param event 事件名称\r\n   * @param data 事件数据\r\n   */\r\n  private _emitEvent(event: DDREvent, data?: any): void {\r\n    if (this.eventListeners.has(event)) {\r\n      const callbacks = this.eventListeners.get(event)!;\r\n      callbacks.forEach(callback => {\r\n        try {\r\n          callback(data);\r\n        } catch (error) {\r\n          console.error(`事件${event}处理错误:`, error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default DDR;\r\n","import * as XLSX from 'xlsx';\n// 尝试导入支持样式的XLSX库\nlet XLSXStyle: any;\ntry {\n  XLSXStyle = require('xlsx-js-style');\n  console.log('使用支持样式的XLSX库');\n} catch (e) {\n  XLSXStyle = XLSX;\n  console.log('使用标准XLSX库（样式支持有限）');\n}\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport { ExportOptions } from '../../types';\nimport { fixPDFExport, setupChineseSupport } from './pdf-fixes';\nimport { applyExcelStyles } from './excel-fixes';\n\n// 应用PDF导出修复\nif (typeof window !== 'undefined') {\n  setTimeout(() => {\n    try {\n      console.log('jsPDF库已内置到组件中');\n      fixPDFExport();\n    } catch (e) {\n      console.warn('应用PDF导出修复失败:', e);\n    }\n  }, 0);\n}\n\n// 定义行信息接口\ninterface RowInfo {\n  index: number;\n  height: number;\n  top: number;\n  isHeader: boolean;\n  content: string;\n}\n\n// 定义分页点接口\ninterface PageBreakPoint {\n  rowIndex: number;\n  yPercent: number;\n}\n\n/**\n * 报表导出模块\n * 支持Excel和PDF格式导出\n */\nexport class Exporter {\n  /**\n   * 导出为Excel\n   * @param data 报表数据或DOM元素\n   * @param options 导出选项\n   */\n  static async toExcel(data: any[] | HTMLElement, options: ExportOptions = {}): Promise<void> {\n    try {\n      // 默认选项\n      const {\n        fileName = '报表',\n        sheetName = 'Sheet1',\n        includeHidden = false,\n        styles = {} // 自定义样式选项\n      } = options;\n\n      let excelData: any[][];\n      let domElement: HTMLElement | null = null;\n\n      // 判断输入类型\n      if (data instanceof HTMLElement) {\n        domElement = data;\n        excelData = this.extractDataFromDOM(data);\n      } else {\n        excelData = data;\n      }\n\n      // 创建工作表 - 使用支持样式的库\n      const ws = XLSXStyle.utils.aoa_to_sheet(excelData);\n\n      // 设置列宽\n      const wscols = [];\n      if (excelData.length > 0) {\n        for (let i = 0; i < excelData[0].length; i++) {\n          // 计算最大宽度\n          let maxWidth = 10; // 默认宽度\n          excelData.forEach(row => {\n            if (row[i] && String(row[i]).length > maxWidth) {\n              maxWidth = Math.min(50, String(row[i]).length); // 限制最大宽度\n            }\n          });\n          wscols.push({ wch: maxWidth });\n        }\n        ws['!cols'] = wscols;\n      }\n\n      // 使用增强的样式功能\n      console.log('Excel导出数据结构:', {\n        dataRows: excelData.length,\n        hasDOMElement: !!domElement,\n        firstRow: excelData[0],\n        lastRow: excelData[excelData.length - 1]\n      });\n\n      // 尝试使用增强样式方法\n      console.log('使用增强样式应用到Excel');\n      try {\n        // 直接调用增强样式方法\n        this.applyEnhancedStylesToExcel(ws, excelData);\n        console.log('增强样式应用成功');\n      } catch (enhancedError) {\n        console.warn('增强样式应用失败，回退到基础样式:', enhancedError);\n        this.applyBasicStylesToExcel(ws, excelData);\n      }\n\n      // 检查样式是否被应用\n      const sampleCells = ['A1', 'A2', 'B1', 'B2'];\n      sampleCells.forEach(cellRef => {\n        if (ws[cellRef]) {\n          console.log(`单元格 ${cellRef} 样式:`, ws[cellRef].s);\n        }\n      });\n\n      // 创建工作簿 - 使用支持样式的库\n      const wb = XLSXStyle.utils.book_new();\n      XLSXStyle.utils.book_append_sheet(wb, ws, sheetName);\n\n      // 设置工作簿属性以支持样式\n      if (!wb.Workbook) wb.Workbook = {};\n      if (!wb.Workbook.Views) wb.Workbook.Views = [];\n      wb.Workbook.Views[0] = { RTL: false };\n\n      // 导出文件 - 使用支持样式的格式\n      try {\n        // 检查是否有样式信息\n        let hasStyles = false;\n        const sampleCells = ['A1', 'A2', 'B1'];\n        for (const cellRef of sampleCells) {\n          if (ws[cellRef] && ws[cellRef].s) {\n            hasStyles = true;\n            break;\n          }\n        }\n\n        console.log(`Excel导出信息: 工作表包含${Object.keys(ws).length}个单元格, 样式信息: ${hasStyles ? '有' : '无'}`);\n\n        // 设置工作簿属性以支持样式\n        wb.Props = {\n          Title: fileName,\n          Subject: \"报表数据\",\n          Author: \"DDR报表组件\",\n          CreatedDate: new Date()\n        };\n\n        // 尝试多种导出方式以确保样式生效\n        try {\n          // 方式1：使用支持样式的导出选项\n          const writeOptions = {\n            bookType: 'xlsx' as const,\n            type: 'buffer' as const,\n            cellStyles: true, // 启用样式支持\n            sheetStubs: false,\n            compression: true\n          };\n\n          // 生成文件数据 - 使用支持样式的库\n          const excelBuffer = XLSXStyle.write(wb, writeOptions);\n\n          // 创建Blob并下载\n          const blob = new Blob([excelBuffer], {\n            type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n          });\n\n          const url = window.URL.createObjectURL(blob);\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = `${fileName}.xlsx`;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          window.URL.revokeObjectURL(url);\n\n          console.log('Excel导出完成（Blob方式，支持样式）');\n        } catch (blobError) {\n          console.warn('Blob导出失败，尝试直接导出:', blobError);\n\n          // 方式2：直接使用writeFile（可能样式支持更好）\n          XLSXStyle.writeFile(wb, `${fileName}.xlsx`, {\n            cellStyles: true,\n            compression: true\n          });\n          console.log('Excel导出完成（直接导出方式）');\n        }\n      } catch (error) {\n        console.error('Excel导出失败:', error);\n        // 降级到基础导出\n        try {\n          XLSXStyle.writeFile(wb, `${fileName}.xlsx`);\n          console.log('Excel导出完成（基础模式）');\n        } catch (fallbackError) {\n          console.error('Excel基础导出也失败:', fallbackError);\n          throw fallbackError;\n        }\n      }\n\n      return Promise.resolve();\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * 从DOM元素提取数据\n   * @param element DOM元素\n   */\n  static extractDataFromDOM(element: HTMLElement): any[][] {\n    const result: any[][] = [];\n\n    // 提取报表标题\n    const titleElement = element.querySelector('.ddr-report-header .ddr-header-title');\n    if (titleElement) {\n      result.push([titleElement.textContent?.trim() || '']);\n      result.push([]); // 空行分隔\n    }\n\n    // 提取元数据字段\n    const fieldsElements = element.querySelectorAll('.ddr-header-fields .ddr-header-field');\n    if (fieldsElements.length > 0) {\n      const metadataRow: string[] = [];\n      fieldsElements.forEach(field => {\n        const label = field.querySelector('.ddr-field-label')?.textContent?.trim() || '';\n        const value = field.querySelector('.ddr-field-value')?.textContent?.trim() || '';\n        if (label && value) {\n          metadataRow.push(`${label} ${value}`);\n        }\n      });\n      if (metadataRow.length > 0) {\n        result.push(metadataRow);\n        result.push([]); // 空行分隔\n      }\n    }\n\n    // 提取表格数据\n    const table = element.querySelector('table');\n    if (table) {\n      const rows = table.querySelectorAll('tr');\n      rows.forEach(row => {\n        const cells = row.querySelectorAll('td, th');\n        const rowData: string[] = [];\n        cells.forEach(cell => {\n          rowData.push(cell.textContent?.trim() || '');\n        });\n        if (rowData.length > 0) {\n          result.push(rowData);\n        }\n      });\n    }\n\n    // 提取表尾信息\n    const footerElement = element.querySelector('.ddr-report-footer');\n    if (footerElement) {\n      result.push([]); // 空行分隔\n\n      // 提取汇总信息\n      const summaryElements = footerElement.querySelectorAll('.ddr-footer-summary .ddr-summary-item');\n      if (summaryElements.length > 0) {\n        const summaryRow: string[] = [];\n        summaryElements.forEach(item => {\n          const label = item.querySelector('.ddr-summary-label')?.textContent?.trim() || '';\n          const value = item.querySelector('.ddr-summary-value')?.textContent?.trim() || '';\n          if (label && value) {\n            summaryRow.push(`${label} ${value}`);\n          }\n        });\n        if (summaryRow.length > 0) {\n          result.push(summaryRow);\n        }\n      }\n\n      // 提取其他表尾字段\n      const footerFields = footerElement.querySelectorAll('.ddr-footer-fields .ddr-footer-field');\n      if (footerFields.length > 0) {\n        const footerRow: string[] = [];\n        footerFields.forEach(field => {\n          const label = field.querySelector('.ddr-field-label')?.textContent?.trim() || '';\n          const value = field.querySelector('.ddr-field-value')?.textContent?.trim() || '';\n          if (label && value) {\n            footerRow.push(`${label} ${value}`);\n          }\n        });\n        if (footerRow.length > 0) {\n          result.push(footerRow);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * 将DOM样式应用到Excel\n   * @param ws 工作表\n   * @param data 数据\n   * @param element DOM元素\n   */\n  static applyDOMStylesToExcel(ws: any, data: any[][], element: HTMLElement): void {\n    console.log('开始应用DOM样式到Excel');\n\n    // 使用简化的样式应用方式，提高兼容性\n    try {\n      // 查找表格元素\n      const table = element.querySelector('table');\n      if (!table) {\n        console.log('未找到表格，使用默认样式');\n        applyExcelStyles(ws, data);\n        return;\n      }\n\n      // 分析DOM结构\n      const titleElement = element.querySelector('.ddr-report-header .ddr-header-title');\n      const hasTitle = !!titleElement;\n      const hasMetadata = element.querySelectorAll('.ddr-header-fields .ddr-header-field').length > 0;\n\n      console.log('DOM结构分析:', { hasTitle, hasMetadata });\n\n      // 计算各部分在Excel中的行索引\n      let currentRowIndex = 0;\n\n      // 简化的样式定义\n      const headerStyle = {\n        font: { bold: true, sz: 12, color: { rgb: \"FFFFFF\" } },\n        fill: { fgColor: { rgb: \"4472C4\" } },\n        alignment: { horizontal: \"center\", vertical: \"center\" }\n      };\n\n      const dataStyle = {\n        font: { sz: 11 },\n        alignment: { vertical: \"center\" }\n      };\n\n      // 标题行样式\n      if (hasTitle) {\n        const cellRef = XLSX.utils.encode_cell({ r: currentRowIndex, c: 0 });\n        if (ws[cellRef]) {\n          ws[cellRef].s = {\n            font: { bold: true, sz: 16 },\n            alignment: { horizontal: \"center\", vertical: \"center\" }\n          };\n          console.log(`应用标题样式到 ${cellRef}`);\n        }\n        currentRowIndex += 2; // 标题 + 空行\n      }\n\n      // 元数据行样式\n      if (hasMetadata) {\n        currentRowIndex += 2; // 元数据 + 空行\n      }\n\n      // 表格样式 - 简化处理\n      const rows = table.querySelectorAll('tr');\n      let isFirstRow = true;\n\n      rows.forEach((row, rowIndex) => {\n        const cells = row.querySelectorAll('td, th');\n        const isHeader = row.querySelector('th') !== null || isFirstRow;\n\n        cells.forEach((cell, cellIndex) => {\n          const excelRowIndex = currentRowIndex + rowIndex;\n          const cellRef = XLSXStyle.utils.encode_cell({ r: excelRowIndex, c: cellIndex });\n\n          if (!ws[cellRef]) return;\n\n          // 应用简化样式\n          if (isHeader) {\n            ws[cellRef].s = headerStyle;\n            console.log(`应用表头样式到 ${cellRef}`);\n          } else {\n            ws[cellRef].s = dataStyle;\n          }\n        });\n\n        if (isFirstRow && isHeader) {\n          isFirstRow = false;\n        }\n      });\n\n      console.log('DOM样式应用完成');\n    } catch (error) {\n      console.error('应用DOM样式失败:', error);\n      // 降级到默认样式\n      applyExcelStyles(ws, data);\n    }\n  }\n\n  /**\n   * 应用基础样式到Excel（兼容性更好的方法）\n   */\n  static applyBasicStylesToExcel(ws: any, data: any[][]): void {\n    console.log('开始应用基础样式到Excel');\n\n    try {\n      // 获取数据范围\n      const range = XLSXStyle.utils.decode_range(ws['!ref'] || 'A1');\n\n      // 应用表头样式（第一行）\n      for (let col = range.s.c; col <= range.e.c; col++) {\n        const cellRef = XLSXStyle.utils.encode_cell({ r: 0, c: col });\n        if (ws[cellRef]) {\n          ws[cellRef].s = {\n            font: { bold: true, sz: 12 },\n            fill: { fgColor: { rgb: \"DDDDDD\" } },\n            alignment: { horizontal: \"center\", vertical: \"center\" }\n          };\n          console.log(`应用表头样式到 ${cellRef}`);\n        }\n      }\n\n      // 应用数据行样式\n      for (let row = 1; row <= range.e.r; row++) {\n        for (let col = range.s.c; col <= range.e.c; col++) {\n          const cellRef = XLSXStyle.utils.encode_cell({ r: row, c: col });\n          if (ws[cellRef]) {\n            ws[cellRef].s = {\n              font: { sz: 10 },\n              alignment: { vertical: \"center\" }\n            };\n          }\n        }\n      }\n\n      console.log('基础样式应用完成');\n    } catch (error) {\n      console.error('应用基础样式失败:', error);\n    }\n  }\n\n  /**\n   * 应用增强样式到Excel（使用更多样式特性）\n   */\n  static applyEnhancedStylesToExcel(ws: any, data: any[][]): void {\n    console.log('开始应用增强样式到Excel');\n\n    try {\n      // 获取数据范围\n      const range = XLSXStyle.utils.decode_range(ws['!ref'] || 'A1');\n\n      // 定义样式\n      const headerStyle = {\n        font: { bold: true, sz: 12, color: { rgb: \"FFFFFF\" } },\n        fill: { fgColor: { rgb: \"4472C4\" } },\n        alignment: { horizontal: \"center\", vertical: \"center\" },\n        border: {\n          top: { style: \"thin\", color: { rgb: \"000000\" } },\n          bottom: { style: \"thin\", color: { rgb: \"000000\" } },\n          left: { style: \"thin\", color: { rgb: \"000000\" } },\n          right: { style: \"thin\", color: { rgb: \"000000\" } }\n        }\n      };\n\n      const dataStyle = {\n        font: { sz: 10 },\n        alignment: { vertical: \"center\" },\n        border: {\n          top: { style: \"thin\", color: { rgb: \"CCCCCC\" } },\n          bottom: { style: \"thin\", color: { rgb: \"CCCCCC\" } },\n          left: { style: \"thin\", color: { rgb: \"CCCCCC\" } },\n          right: { style: \"thin\", color: { rgb: \"CCCCCC\" } }\n        }\n      };\n\n      const alternateRowStyle = {\n        font: { sz: 10 },\n        fill: { fgColor: { rgb: \"F8F9FA\" } },\n        alignment: { vertical: \"center\" },\n        border: {\n          top: { style: \"thin\", color: { rgb: \"CCCCCC\" } },\n          bottom: { style: \"thin\", color: { rgb: \"CCCCCC\" } },\n          left: { style: \"thin\", color: { rgb: \"CCCCCC\" } },\n          right: { style: \"thin\", color: { rgb: \"CCCCCC\" } }\n        }\n      };\n\n      // 应用表头样式（第一行）\n      for (let col = range.s.c; col <= range.e.c; col++) {\n        const cellRef = XLSXStyle.utils.encode_cell({ r: 0, c: col });\n        if (ws[cellRef]) {\n          ws[cellRef].s = headerStyle;\n          console.log(`应用增强表头样式到 ${cellRef}`);\n        }\n      }\n\n      // 应用数据行样式（交替行颜色）\n      for (let row = 1; row <= range.e.r; row++) {\n        const isAlternateRow = row % 2 === 0;\n        const rowStyle = isAlternateRow ? alternateRowStyle : dataStyle;\n\n        for (let col = range.s.c; col <= range.e.c; col++) {\n          const cellRef = XLSXStyle.utils.encode_cell({ r: row, c: col });\n          if (ws[cellRef]) {\n            ws[cellRef].s = rowStyle;\n          }\n        }\n      }\n\n      // 设置列宽\n      if (!ws['!cols']) ws['!cols'] = [];\n      for (let col = range.s.c; col <= range.e.c; col++) {\n        ws['!cols'][col] = { wch: 15 }; // 设置列宽为15字符\n      }\n\n      console.log('增强样式应用完成');\n    } catch (error) {\n      console.error('应用增强样式失败，回退到基础样式:', error);\n      // 回退到基础样式\n      this.applyBasicStylesToExcel(ws, data);\n    }\n  }\n\n  /**\n   * 将RGB颜色转换为十六进制\n   */\n  static rgbToHex(rgb: string): string {\n    if (!rgb || rgb === 'transparent') return 'FFFFFF';\n\n    const match = rgb.match(/rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)/);\n    if (match) {\n      const r = parseInt(match[1]);\n      const g = parseInt(match[2]);\n      const b = parseInt(match[3]);\n      return ((r << 16) | (g << 8) | b).toString(16).padStart(6, '0').toUpperCase();\n    }\n\n    return 'FFFFFF';\n  }\n\n  /**\n   * 将CSS文本对齐转换为Excel对齐\n   */\n  static getExcelAlignment(textAlign: string): string {\n    switch (textAlign) {\n      case 'center': return 'center';\n      case 'right': return 'right';\n      case 'justify': return 'justify';\n      default: return 'left';\n    }\n  }\n\n  /**\n   * 导出为PDF\n   * @param element 要导出的DOM元素\n   * @param config 报表配置\n   * @param options 导出选项\n   */\n  static async toPDF(element: HTMLElement, config?: any, options: ExportOptions = {}): Promise<void> {\n    try {\n      console.log('PDF导出开始，使用内置jsPDF库');\n\n      // 默认选项\n      const {\n        fileName = '报表',\n        watermark = '',\n        pdf: pdfOptions = {}\n      } = options;\n\n      // 从配置中获取PDF设置，选项可以覆盖配置\n      const configPdfSettings = config?.features?.pdfConfig || {};\n      const mergedPdfOptions = { ...configPdfSettings, ...pdfOptions };\n\n      // 调试信息：输出PDF配置\n      console.log('PDF导出配置:', {\n        configPdfSettings,\n        pdfOptions,\n        mergedPdfOptions\n      });\n\n      // PDF配置\n      const pageSize = mergedPdfOptions.pageSize || 'A4';\n      const orientation = mergedPdfOptions.orientation || 'portrait';\n      const quality = mergedPdfOptions.quality || 0.95;\n      const multiPage = mergedPdfOptions.multiPage !== false;\n      const relayout = mergedPdfOptions.relayout !== false; // 默认重新排版\n\n      console.log(`PDF设置 - 页面大小: ${pageSize}, 方向: ${orientation}, 重新排版: ${relayout}`);\n\n      // 设置页边距(mm)\n      const margins = {\n        top: mergedPdfOptions.margins?.top || 15,\n        right: mergedPdfOptions.margins?.right || 15,\n        bottom: mergedPdfOptions.margins?.bottom || 15,\n        left: mergedPdfOptions.margins?.left || 15\n      };\n\n      // 保存原始滚动位置\n      const originalScrollTop = element.scrollTop;\n\n      // 创建临时容器\n      const tempContainer = element.cloneNode(true) as HTMLElement;\n      tempContainer.style.position = 'absolute';\n      tempContainer.style.left = '-9999px';\n      tempContainer.style.overflow = 'visible';\n      tempContainer.style.height = 'auto';\n\n      // 如果启用重新排版，设置PDF适合的宽度\n      if (relayout) {\n        // 根据PDF页面方向设置合适的宽度\n        const pdfWidth = orientation === 'landscape' ?\n          (pageSize === 'A4' ? 297 : 279) : // A4横版297mm, Letter横版279mm\n          (pageSize === 'A4' ? 210 : 216);  // A4竖版210mm, Letter竖版216mm\n\n        // 考虑页边距，设置内容宽度(转换为px，假设96dpi)\n        const contentWidthMm = pdfWidth - margins.left - margins.right;\n        // 调整DPI比例，使横版能显示更多内容\n        const dpiRatio = orientation === 'landscape' ? 4.0 : 3.78; // 横版使用稍高的DPI\n        const contentWidthPx = Math.floor(contentWidthMm * dpiRatio);\n\n        tempContainer.style.width = contentWidthPx + 'px';\n        tempContainer.style.maxWidth = contentWidthPx + 'px';\n\n        // 强制表格重新计算布局，应用横/竖版适当的样式\n        const tableElements = tempContainer.querySelectorAll('table');\n        tableElements.forEach(table => {\n          const tableElem = table as HTMLElement;\n          tableElem.style.width = '100%';\n          tableElem.style.tableLayout = 'fixed';\n\n          // 横版时特殊处理，使表格更合理利用空间\n          if (orientation === 'landscape') {\n            // 横版时调整单元格尺寸，使文本更紧凑\n            const cells = tableElem.querySelectorAll('td, th');\n            cells.forEach(cell => {\n              (cell as HTMLElement).style.padding = '3px 4px'; // 减小内边距\n            });\n          }\n        });\n      } else {\n        // 缩放模式：保持原始宽度，但确保等比例缩放\n        tempContainer.style.width = element.clientWidth + 'px';\n        console.log('使用缩放模式，保持原始宽度:', element.clientWidth + 'px');\n      }\n\n      document.body.appendChild(tempContainer);\n\n      // 确保所有内容可见\n      const headerElement = tempContainer.querySelector('.ddr-report-header') as HTMLElement;\n      const footerElement = tempContainer.querySelector('.ddr-report-footer') as HTMLElement;\n      const tableContainer = tempContainer.querySelector('.ddr-table-container') as HTMLElement;\n\n      // 检查必要的元素是否存在\n      if (!tableContainer) {\n        console.warn('未找到表格容器元素，导出可能不完整');\n      }\n\n      // 优化DOM结构以便更好地导出\n      if (tableContainer) {\n        tableContainer.style.maxHeight = 'none';\n        tableContainer.style.height = 'auto';\n        tableContainer.style.overflow = 'visible';\n\n        // 确保表格内容正确显示\n        const tableElement = tableContainer.querySelector('table');\n        if (tableElement) {\n          // 确保表格宽度正确\n          tableElement.style.width = '100%';\n\n          // 确保所有单元格都有适当的边框\n          const cells = tableElement.querySelectorAll('td, th');\n          cells.forEach(cell => {\n            (cell as HTMLElement).style.border = '1px solid #ddd';\n          });\n        }\n      }\n\n      // 优化表头和表尾\n      if (headerElement) {\n        headerElement.style.position = 'relative';\n        headerElement.style.height = 'auto';\n        headerElement.style.overflow = 'visible';\n      }\n\n      if (footerElement) {\n        footerElement.style.position = 'relative';\n        footerElement.style.height = 'auto';\n        footerElement.style.overflow = 'visible';\n      }\n        // 初始化PDF\n      const pdf = new jsPDF({\n        orientation,\n        unit: 'mm',\n        format: pageSize\n      });\n\n      // 设置中文支持\n      setupChineseSupport(pdf);\n\n      const pageWidth = pdf.internal.pageSize.getWidth();\n      const pageHeight = pdf.internal.pageSize.getHeight();\n\n      // 内容区域高度（减去页边距）\n      const contentHeight = pageHeight - margins.top - margins.bottom;\n      const contentWidth = pageWidth - margins.left - margins.right;\n\n      // 设置字体大小\n      pdf.setFontSize(12);\n\n      if (multiPage) {\n        // -------------- 多页处理 --------------\n\n        // 表头高度(如果有) - 精确测量实际高度\n        let headerHeight = 0;\n        let headerCanvas;\n        if (headerElement) {\n          try {\n            // 首先获取元素的实际像素尺寸\n            const headerRect = headerElement.getBoundingClientRect();\n            console.log(`📏 报表头DOM尺寸：${Math.round(headerRect.width)}px × ${Math.round(headerRect.height)}px`);\n\n            headerCanvas = await html2canvas(headerElement, {\n              scale: 2.0, // 适中的清晰度\n              useCORS: true,\n              logging: false,\n              allowTaint: true,\n              backgroundColor: '#FFFFFF' // 确保背景色一致\n            });\n\n            // 基于Canvas和DOM的比例关系计算PDF中的实际高度\n            // 这样可以避免DPI假设的问题\n            headerHeight = (headerCanvas.height / headerCanvas.width) * contentWidth;\n\n            console.log(`📏 报表头Canvas尺寸：${headerCanvas.width}px × ${headerCanvas.height}px`);\n            console.log(`📏 报表头实际高度：${Math.round(headerHeight * 100) / 100}mm`);\n          } catch (e) {\n            console.warn('渲染表头时出错:', e);\n          }\n        }\n\n        // 表尾高度(如果有) - 精确测量实际高度\n        let footerHeight = 0;\n        let footerCanvas;\n        if (footerElement) {\n          try {\n            // 首先获取元素的实际像素尺寸\n            const footerRect = footerElement.getBoundingClientRect();\n            console.log(`📏 报表尾DOM尺寸：${Math.round(footerRect.width)}px × ${Math.round(footerRect.height)}px`);\n\n            footerCanvas = await html2canvas(footerElement, {\n              scale: 2.0, // 适中的清晰度\n              useCORS: true,\n              logging: false,\n              allowTaint: true,\n              backgroundColor: '#FFFFFF' // 确保背景色一致\n            });\n\n            // 基于Canvas和DOM的比例关系计算PDF中的实际高度\n            // 这样可以避免DPI假设的问题\n            footerHeight = (footerCanvas.height / footerCanvas.width) * contentWidth;\n\n            console.log(`📏 报表尾Canvas尺寸：${footerCanvas.width}px × ${footerCanvas.height}px`);\n            console.log(`📏 报表尾实际高度：${Math.round(footerHeight * 100) / 100}mm`);\n          } catch (e) {\n            console.warn('渲染表尾时出错:', e);\n          }\n        }\n\n        // 提取表格部分\n        const tableElement = tableContainer?.querySelector('table') || tableContainer;\n        if (!tableElement) {\n          throw new Error('找不到表格元素');\n        }\n\n        // 获取表格的实际DOM尺寸\n        const tableRect = tableElement.getBoundingClientRect();\n        console.log(`📏 表格DOM尺寸：${Math.round(tableRect.width)}px × ${Math.round(tableRect.height)}px`);\n\n        // 将表格转换为canvas，提高清晰度\n        let tableCanvas;\n        let tableWidth;\n        let tableHeight;\n\n        try {\n          tableCanvas = await html2canvas(tableElement, {\n            scale: 2.0, // 适中的清晰度\n            useCORS: true,\n            logging: false,\n            allowTaint: true,\n            backgroundColor: '#FFFFFF' // 确保背景色一致\n          });\n\n          // 基于Canvas和DOM的比例关系计算PDF中的实际尺寸\n          tableWidth = contentWidth; // PDF内容区域宽度\n          tableHeight = (tableCanvas.height / tableCanvas.width) * tableWidth; // 基于Canvas比例计算\n\n          console.log(`📏 表格Canvas尺寸：${tableCanvas.width}px × ${tableCanvas.height}px`);\n          console.log(`📏 表格实际高度：${Math.round(tableHeight * 100) / 100}mm`);\n\n          // 简化分页算法 - 直接基于表格高度的50%分页\n          const rows = tableElement.querySelectorAll('tr');\n          const totalRows = rows.length;\n\n          // 计算表头行数\n          let headerRowCount = 0;\n          for (let i = 0; i < rows.length; i++) {\n            if (rows[i].querySelector('th')) {\n              headerRowCount++;\n            } else {\n              break; // 遇到第一个非表头行就停止\n            }\n          }\n\n          const dataRowCount = totalRows - headerRowCount;\n          console.log(`总行数: ${totalRows}, 表头行数: ${headerRowCount}, 数据行数: ${dataRowCount}`);\n\n          // 动态计算分页点 - 基于实际可用空间\n          const pageBreakPoints: Array<{yPercent: number; endRow: number}> = [];\n\n          // 动态测量实际高度 - 不再使用估算\n          console.log(`🔍 开始精确测量各部分实际高度...`);\n\n          // 1. 精确测量报表头实际高度（毫米）\n          let actualHeaderHeightMM = 0;\n          if (headerCanvas) {\n            // 报表头高度已经在前面通过html2canvas精确测量并转换为毫米\n            actualHeaderHeightMM = headerHeight;\n            console.log(`📏 报表头实际高度：${Math.round(actualHeaderHeightMM)}mm`);\n          }\n\n          // 2. 精确测量报表尾实际高度（毫米）\n          let actualFooterHeightMM = 0;\n          if (footerCanvas) {\n            // 报表尾高度已经在前面通过html2canvas精确测量并转换为毫米\n            actualFooterHeightMM = footerHeight;\n            console.log(`📏 报表尾实际高度：${Math.round(actualFooterHeightMM)}mm`);\n          }\n\n          // 3. 精确计算单行数据高度 - 基于Canvas比例\n          const avgRowHeightCanvas = tableCanvas.height / totalRows; // Canvas中的单行高度\n          const dataRowHeightMM = (avgRowHeightCanvas / tableCanvas.height) * tableHeight; // 转换为毫米\n\n          console.log(`📏 单行数据高度：${Math.round(dataRowHeightMM * 100) / 100}mm`);\n\n          // 页面布局常量 - 针对不同页面类型调整\n          const firstPageNumberReserve = 25; // 第一页页码预留空间(mm) - 更多空间\n          const middlePageNumberReserve = 18; // 中间页页码预留空间(mm) - 适中空间\n          const headerFooterGap = 5; // 报表头与数据间距(mm)\n          const dataFooterGap = 10; // 数据与报表尾间距(mm)\n          const safetyMargin = 8; // 安全边距(mm)\n\n          console.log(`🔍 精确高度计算：`);\n          console.log(`- 页面总高度：${Math.round(pageHeight)}mm`);\n          console.log(`- 上下边距：${margins.top + margins.bottom}mm`);\n          console.log(`- 第一页页码预留：${firstPageNumberReserve}mm`);\n          console.log(`- 中间页页码预留：${middlePageNumberReserve}mm`);\n          console.log(`- 报表头高度：${Math.round(actualHeaderHeightMM)}mm`);\n          console.log(`- 单行数据高度：${Math.round(dataRowHeightMM * 100) / 100}mm`);\n          console.log(`- 报表尾高度：${Math.round(actualFooterHeightMM)}mm`);\n\n          // 计算各页可用高度（针对不同页面类型使用不同的页码预留空间）\n          const firstPageBaseHeight = pageHeight - margins.top - margins.bottom - firstPageNumberReserve - safetyMargin;\n          const middlePageBaseHeight = pageHeight - margins.top - margins.bottom - middlePageNumberReserve - safetyMargin;\n\n          // 第一页：需要减去报表头和间距\n          const firstPageDataHeight = firstPageBaseHeight - actualHeaderHeightMM - headerFooterGap;\n\n          // 中间页：全部用于数据\n          const middlePageDataHeight = middlePageBaseHeight;\n\n          // 最后一页：需要考虑报表尾（使用中间页的基础高度）\n          const lastPageDataHeight = middlePageBaseHeight - actualFooterHeightMM - dataFooterGap;\n\n          console.log(`📐 各页可用数据高度：`);\n          console.log(`- 第一页数据区：${Math.round(firstPageDataHeight)}mm`);\n          console.log(`- 中间页数据区：${Math.round(middlePageDataHeight)}mm`);\n          console.log(`- 最后页数据区：${Math.round(lastPageDataHeight)}mm`);\n\n          // 精确计算各页最大行数 - 基于实际测量的高度\n          // 使用实际测量的单行高度和页面可用空间进行精确计算\n          const firstPageMaxRows = Math.floor(firstPageDataHeight / dataRowHeightMM);\n          const middlePageMaxRows = Math.floor(middlePageDataHeight / dataRowHeightMM);\n          const lastPageMaxRows = Math.floor(lastPageDataHeight / dataRowHeightMM);\n\n          console.log(`📊 精确计算的各页最大行数：`);\n          console.log(`- 第一页最大：${firstPageMaxRows}行 (${Math.round(firstPageDataHeight)}mm ÷ ${Math.round(dataRowHeightMM * 100) / 100}mm)`);\n          console.log(`- 中间页最大：${middlePageMaxRows}行 (${Math.round(middlePageDataHeight)}mm ÷ ${Math.round(dataRowHeightMM * 100) / 100}mm)`);\n          console.log(`- 最后页最大：${lastPageMaxRows}行 (${Math.round(lastPageDataHeight)}mm ÷ ${Math.round(dataRowHeightMM * 100) / 100}mm)`);\n\n          // 智能分页算法\n          let processedRows = 0;\n          let pageIndex = 0;\n\n          while (processedRows < dataRowCount) {\n            let maxRowsThisPage: number;\n\n            if (pageIndex === 0) {\n              // 第一页\n              maxRowsThisPage = firstPageMaxRows;\n            } else {\n              // 检查是否为最后一页\n              const remainingRows = dataRowCount - processedRows;\n\n              // 如果剩余行数可以放在一页中，且能容纳报表尾，则为最后一页\n              if (remainingRows <= lastPageMaxRows) {\n                maxRowsThisPage = remainingRows; // 最后一页，显示所有剩余行\n                console.log(`📄 第${pageIndex + 1}页为最后一页，显示剩余${remainingRows}行，报表尾将在此页或新页显示`);\n              } else {\n                // 中间页，使用中间页最大行数\n                maxRowsThisPage = middlePageMaxRows;\n              }\n            }\n\n            const rowsThisPage = Math.min(maxRowsThisPage, dataRowCount - processedRows);\n            processedRows += rowsThisPage;\n\n            if (processedRows < dataRowCount) {\n              // 精确计算分页点 - 基于实际高度比例\n              // 报表头在Canvas中的高度比例\n              const headerHeightRatio = actualHeaderHeightMM / tableHeight;\n\n              // 数据区域在Canvas中的高度比例\n              const dataAreaHeightRatio = 1 - headerHeightRatio - (actualFooterHeightMM / tableHeight);\n\n              // 当前已处理行数占总数据行数的比例\n              const processedRowsRatio = processedRows / dataRowCount;\n\n              // 分页点的Y位置 = 报表头高度比例 + (已处理行数比例 × 数据区域高度比例)\n              const breakYPercent = headerHeightRatio + (processedRowsRatio * dataAreaHeightRatio);\n\n              pageBreakPoints.push({\n                yPercent: breakYPercent,\n                endRow: processedRows\n              });\n\n              console.log(`📄 创建分页点 ${pageIndex + 1}：第${processedRows}行结束，Y=${Math.round(breakYPercent * 100)}% (头部${Math.round(headerHeightRatio * 100)}% + 数据${Math.round(processedRowsRatio * dataAreaHeightRatio * 100)}%)`);\n            }\n\n            pageIndex++;\n          }\n\n          // 计算总页数\n          const pagesNeeded = pageBreakPoints.length + 1;\n          console.log(`📊 总计需要 ${pagesNeeded} 页显示 ${dataRowCount} 行数据`);\n\n          // 表格各部分的图像数据\n          const headerImgData = headerCanvas ? headerCanvas.toDataURL('image/jpeg', quality) : null;\n          const footerImgData = footerCanvas ? footerCanvas.toDataURL('image/jpeg', quality) : null;\n\n          // 检查最后一页是否需要额外页面显示报表尾\n          if (footerImgData) {\n            const lastPageRows = pageBreakPoints.length > 0 ?\n              dataRowCount - pageBreakPoints[pageBreakPoints.length - 1].endRow :\n              dataRowCount;\n            const lastPageDataHeightUsed = lastPageRows * dataRowHeightMM;\n            const lastPageRemainingHeight = lastPageDataHeight - lastPageDataHeightUsed;\n\n            console.log(`📋 报表尾检查：`);\n            console.log(`- 最后一页数据行数：${lastPageRows}`);\n            console.log(`- 最后一页数据占用高度：${Math.round(lastPageDataHeightUsed)}mm`);\n            console.log(`- 最后一页剩余高度：${Math.round(lastPageRemainingHeight)}mm`);\n            console.log(`- 报表尾需要高度：${Math.round(actualFooterHeightMM + dataFooterGap)}mm`);\n\n            if (lastPageRemainingHeight < actualFooterHeightMM + dataFooterGap) {\n              console.log(`⚠️ 最后一页空间不足，报表尾将在新页显示`);\n            } else {\n              console.log(`✅ 最后一页空间充足，报表尾将在当前页显示`);\n            }\n          }\n\n          // 逐页添加内容\n          for (let page = 0; page < pagesNeeded; page++) {\n            // 如果不是第一页，创建新页\n            if (page > 0) {\n              pdf.addPage();\n            }\n\n            let yOffset = margins.top;\n\n            // 添加表头（只在第一页显示）\n            if (headerImgData && page === 0) {\n              pdf.addImage(\n                headerImgData,\n                'JPEG',\n                margins.left,\n                yOffset,\n                contentWidth,\n                headerHeight\n              );\n              yOffset += headerHeight + 5; // 5mm的间距\n            }\n\n            // 计算当前页表格部分的起始位置和结束位置\n            let tableStartPercent = 0;\n            let tableEndPercent = 1;\n\n            // 根据分页点计算每页内容范围\n            if (pageBreakPoints.length > 0) {\n              if (page === 0) {\n                // 第一页：从开始到第一个分页点\n                tableStartPercent = 0;\n                tableEndPercent = pageBreakPoints[0].yPercent;\n\n                const endRow = pageBreakPoints[0].endRow;\n                console.log(`📄 第1页：显示表头+第1-${endRow}行，Y范围：0% 到 ${Math.round(pageBreakPoints[0].yPercent * 100)}%`);\n              } else {\n                // 后续页：从前一个分页点到当前分页点（或结束）\n                tableStartPercent = pageBreakPoints[page - 1].yPercent;\n                tableEndPercent = page < pageBreakPoints.length ? pageBreakPoints[page].yPercent : 1;\n\n                const startRow = pageBreakPoints[page - 1].endRow + 1;\n                const endRow = page < pageBreakPoints.length ? pageBreakPoints[page].endRow : dataRowCount;\n                console.log(`📄 第${page + 1}页：显示第${startRow}-${endRow}行，Y范围：${Math.round(tableStartPercent * 100)}% 到 ${Math.round(tableEndPercent * 100)}%`);\n              }\n            } else {\n              // 单页显示所有内容\n              console.log(`📄 第${page + 1}页：显示所有内容（单页模式）`);\n            }\n\n            // 根据分页计算精确裁剪源图像\n            let sourceY: number;\n            let sourceHeight: number;\n            let tablePartHeight: number;\n\n            if (pageBreakPoints.length > 0) {\n              // 多页模式：使用精确的高度比例计算\n              if (page === 0) {\n                // 第一页：从顶部开始到第一个分页点\n                const endRow = pageBreakPoints[0].endRow;\n                sourceY = 0; // 从表头开始\n\n                // 精确计算：使用实际高度比例\n                const headerHeightRatio = actualHeaderHeightMM / tableHeight;\n                const dataAreaHeightRatio = 1 - headerHeightRatio - (actualFooterHeightMM / tableHeight);\n                const endRowRatio = endRow / dataRowCount;\n                const endPercent = headerHeightRatio + (endRowRatio * dataAreaHeightRatio);\n\n                sourceHeight = Math.floor(endPercent * tableCanvas.height);\n                tablePartHeight = (sourceHeight / tableCanvas.height) * tableHeight;\n\n                console.log(`📐 第1页精确裁剪：表头+${endRow}行数据，源高度=${Math.round(sourceHeight)}px，目标高度=${Math.round(tablePartHeight)}mm，结束比例=${Math.round(endPercent * 100)}%`);\n              } else {\n                // 后续页：从前一个分页点到当前分页点\n                const startRow = pageBreakPoints[page - 1].endRow;\n                const endRow = page < pageBreakPoints.length ? pageBreakPoints[page].endRow : dataRowCount;\n                const rowsThisPage = endRow - startRow;\n\n                // 精确计算：使用实际高度比例\n                const headerHeightRatio = actualHeaderHeightMM / tableHeight;\n                const dataAreaHeightRatio = 1 - headerHeightRatio - (actualFooterHeightMM / tableHeight);\n                const startRowRatio = startRow / dataRowCount;\n                const endRowRatio = endRow / dataRowCount;\n                const startPercent = headerHeightRatio + (startRowRatio * dataAreaHeightRatio);\n                const endPercent = headerHeightRatio + (endRowRatio * dataAreaHeightRatio);\n\n                sourceY = Math.floor(startPercent * tableCanvas.height);\n                sourceHeight = Math.floor((endPercent - startPercent) * tableCanvas.height);\n                tablePartHeight = (sourceHeight / tableCanvas.height) * tableHeight;\n\n                console.log(`📐 第${page + 1}页精确裁剪：第${startRow + 1}-${endRow}行（${rowsThisPage}行），源高度=${Math.round(sourceHeight)}px，目标高度=${Math.round(tablePartHeight)}mm，范围=${Math.round(startPercent * 100)}%-${Math.round(endPercent * 100)}%`);\n              }\n            } else {\n              // 单页模式：使用原有逻辑\n              sourceY = Math.floor(tableStartPercent * tableCanvas.height);\n              sourceHeight = Math.ceil((tableEndPercent - tableStartPercent) * tableCanvas.height);\n              tablePartHeight = (sourceHeight / tableCanvas.height) * tableHeight;\n\n              console.log(`📐 单页模式：源高度=${Math.round(sourceHeight)}px，目标高度=${Math.round(tablePartHeight)}mm`);\n            }\n\n            // 验证可用空间（仅用于警告，不压缩内容）\n            const currentPageNumberReserve = 15; // 与前面计算保持一致\n            const maxAllowedHeight = pageHeight - yOffset - margins.bottom - currentPageNumberReserve;\n\n            if (tablePartHeight > maxAllowedHeight) {\n              console.warn(`⚠️ 第${page + 1}页内容高度${Math.round(tablePartHeight)}mm超出可用空间${Math.round(maxAllowedHeight)}mm，可能需要调整分页算法`);\n            }\n\n            try {\n              // 创建临时canvas来保存裁剪的表格部分\n              const pageTableCanvas = document.createElement('canvas');\n              pageTableCanvas.width = tableCanvas.width;\n              pageTableCanvas.height = sourceHeight;\n\n              const pageTableCtx = pageTableCanvas.getContext('2d');\n              if (pageTableCtx) {\n                // 将表格对应部分裁剪到新canvas\n                pageTableCtx.drawImage(\n                  tableCanvas,\n                  0, sourceY, tableCanvas.width, sourceHeight,\n                  0, 0, pageTableCanvas.width, pageTableCanvas.height\n                );\n\n                // 将裁剪后的表格部分转换为图像数据\n                const pageTableImgData = pageTableCanvas.toDataURL('image/jpeg', quality);\n\n                // 添加裁剪后的表格部分\n                pdf.addImage(\n                  pageTableImgData,\n                  'JPEG',\n                  margins.left,\n                  yOffset,\n                  contentWidth,\n                  tablePartHeight\n                );\n\n                yOffset += tablePartHeight;\n              }\n            } catch (e) {\n              console.warn('处理表格页码时出错:', e);\n            }\n\n            // 添加页码（如果页数大于1）\n            if (pagesNeeded > 1) {\n              // 使用英文格式页码，避免中文乱码问题\n              try {\n                pdf.setFontSize(10);\n                pdf.setTextColor(80, 80, 80);\n\n                // 页码位置：确保有足够的空间，不贴边\n                const pageNumberY = pageHeight - margins.bottom + 3; // 在底部边距内，但留3mm空间\n\n                pdf.text(\n                  `Page ${page + 1} / ${pagesNeeded}`,\n                  pageWidth / 2,\n                  pageNumberY,\n                  { align: 'center' }\n                );\n\n                console.log(`第${page + 1}页添加页码，位置：Y=${Math.round(pageNumberY)}mm`);\n              } catch (e) {\n                console.warn('页码渲染失败:', e);\n              }\n            }\n\n            // 添加表尾（只在最后一页显示）\n            if (footerImgData && page === pagesNeeded - 1) {\n              // 计算表尾位置，确保不覆盖表格内容和页码\n              const minFooterY = yOffset + dataFooterGap; // 表格内容下方预留间距\n              const maxFooterY = pageHeight - margins.bottom - currentPageNumberReserve - footerHeight; // 考虑页码空间\n\n              const footerY = Math.max(minFooterY, maxFooterY);\n\n              // 如果当前页没有足够空间显示表尾，则创建新页\n              if (footerY + footerHeight > pageHeight - margins.bottom - currentPageNumberReserve) {\n                console.log(`📄 表尾需要新页显示，当前页剩余空间不足`);\n                pdf.addPage();\n\n                // 在新页添加表尾\n                pdf.addImage(\n                  footerImgData,\n                  'JPEG',\n                  margins.left,\n                  margins.top,\n                  contentWidth,\n                  footerHeight\n                );\n\n                // 在新页添加页码\n                if (pagesNeeded > 1) {\n                  const newPageNumber = pagesNeeded + 1; // 新增的表尾页\n                  pdf.setFontSize(10);\n                  pdf.setTextColor(80, 80, 80);\n                  const pageNumberY = pageHeight - margins.bottom + 3;\n                  pdf.text(\n                    `Page ${newPageNumber} / ${newPageNumber}`,\n                    pageWidth / 2,\n                    pageNumberY,\n                    { align: 'center' }\n                  );\n                }\n\n                // 在新页添加水印\n                if (watermark) {\n                  try {\n                    const watermarkCanvas = document.createElement('canvas');\n                    watermarkCanvas.width = 400;\n                    watermarkCanvas.height = 100;\n                    const ctx = watermarkCanvas.getContext('2d');\n\n                    if (ctx) {\n                      ctx.font = '40px Arial, sans-serif';\n                      ctx.fillStyle = 'rgba(200, 200, 200, 0.3)';\n                      ctx.textAlign = 'center';\n                      ctx.textBaseline = 'middle';\n                      ctx.translate(200, 50);\n                      ctx.rotate(45 * Math.PI / 180);\n                      ctx.fillText(watermark, 0, 0);\n\n                      const watermarkImgData = watermarkCanvas.toDataURL('image/png');\n                      pdf.addImage(\n                        watermarkImgData,\n                        'PNG',\n                        pageWidth / 2 - 50,\n                        pageHeight / 2 - 12.5,\n                        100,\n                        25,\n                        undefined,\n                        'NONE'\n                      );\n                    }\n                  } catch (e) {\n                    console.warn('新页水印添加失败:', e);\n                  }\n                }\n              } else {\n                // 在当前页添加表尾\n                console.log(`📄 在第${page + 1}页添加表尾，位置：Y=${Math.round(footerY)}mm`);\n                pdf.addImage(\n                  footerImgData,\n                  'JPEG',\n                  margins.left,\n                  footerY,\n                  contentWidth,\n                  footerHeight\n                );\n              }\n            }\n\n            // 在每页添加水印\n            if (watermark) {\n              try {\n                // 设置水印样式\n                pdf.setTextColor(200, 200, 200);\n                pdf.setFontSize(40);\n\n                // 计算水印位置（页面中心）\n                const watermarkX = pageWidth / 2;\n                const watermarkY = pageHeight / 2;\n\n                // 处理中文水印问题 - 使用图像方式\n                try {\n                  // 创建临时canvas来渲染中文水印\n                  const watermarkCanvas = document.createElement('canvas');\n                  watermarkCanvas.width = 400;\n                  watermarkCanvas.height = 100;\n                  const ctx = watermarkCanvas.getContext('2d');\n\n                  if (ctx) {\n                    // 设置字体和样式\n                    ctx.font = '40px Arial, sans-serif';\n                    ctx.fillStyle = 'rgba(200, 200, 200, 0.3)';\n                    ctx.textAlign = 'center';\n                    ctx.textBaseline = 'middle';\n\n                    // 旋转画布\n                    ctx.translate(200, 50);\n                    ctx.rotate(45 * Math.PI / 180);\n\n                    // 绘制水印文字\n                    ctx.fillText(watermark, 0, 0);\n\n                    // 将canvas转换为图像并添加到PDF\n                    const watermarkImgData = watermarkCanvas.toDataURL('image/png');\n\n                    // 添加水印图像到PDF\n                    pdf.addImage(\n                      watermarkImgData,\n                      'PNG',\n                      watermarkX - 50, // 调整位置\n                      watermarkY - 12.5,\n                      100, // 宽度\n                      25,  // 高度\n                      undefined,\n                      'NONE'\n                    );\n\n                    console.log(`第${page + 1}页添加水印图像: \"${watermark}\"`);\n                  } else {\n                    throw new Error('无法创建canvas上下文');\n                  }\n                } catch (canvasError) {\n                  console.warn('Canvas水印失败，使用文字水印:', canvasError);\n                  // 降级到文字水印\n                  try {\n                    pdf.text('CONFIDENTIAL', watermarkX, watermarkY, {\n                      align: 'center',\n                      baseline: 'middle',\n                      angle: 45\n                    });\n                    console.log(`第${page + 1}页添加英文水印: \"CONFIDENTIAL\"`);\n                  } catch (textError) {\n                    console.warn('文字水印也失败:', textError);\n                  }\n                }\n              } catch (watermarkError) {\n                console.warn(`第${page + 1}页添加水印失败:`, watermarkError);\n              }\n            }\n\n            // 注意：新页的添加已经在循环开始时处理了，这里不需要重复添加\n          }\n        } catch (e) {\n          console.warn('处理表格时出错:', e);\n          // 降级处理：使用html2canvas对整个元素截图\n          const canvas = await html2canvas(tempContainer, {\n            scale: 1.5,\n            useCORS: true,\n            logging: false,\n            allowTaint: true,\n            backgroundColor: '#FFFFFF'\n          });\n\n          const imgData = canvas.toDataURL('image/jpeg', quality);\n\n          // 计算等比例缩放尺寸\n          const canvasAspectRatio = canvas.width / canvas.height;\n          const pageAspectRatio = contentWidth / contentHeight;\n\n          let imgWidth, imgHeight;\n\n          if (relayout) {\n            // 重新排版模式：使用内容区域的完整宽度\n            imgWidth = contentWidth;\n            imgHeight = (canvas.height / canvas.width) * imgWidth;\n            console.log('重新排版模式 - 图像尺寸:', { imgWidth, imgHeight });\n          } else {\n            // 缩放模式：等比例缩放以适应页面\n            if (canvasAspectRatio > pageAspectRatio) {\n              // 图像更宽，以宽度为准\n              imgWidth = contentWidth;\n              imgHeight = imgWidth / canvasAspectRatio;\n            } else {\n              // 图像更高，以高度为准\n              imgHeight = contentHeight;\n              imgWidth = imgHeight * canvasAspectRatio;\n            }\n            console.log('缩放模式 - 等比例缩放图像尺寸:', { imgWidth, imgHeight, canvasAspectRatio, pageAspectRatio });\n          }\n\n          pdf.addImage(imgData, 'JPEG', margins.left, margins.top, imgWidth, imgHeight);\n        }\n      }\n\n      // 水印已在每页循环中添加\n\n      // 清理临时元素\n      document.body.removeChild(tempContainer);\n\n      // 恢复原始滚动位置\n      element.scrollTop = originalScrollTop;\n\n      // 保存文件\n      pdf.save(`${fileName}.pdf`);\n\n      return Promise.resolve();\n    } catch (error) {\n      console.error('PDF导出失败:', error);\n      return Promise.reject(error);\n    }\n  }\n}\n","/**\r\n * 修复Excel导出样式问题\r\n */\r\n\r\nimport * as XLSX from 'xlsx';\r\n\r\n// 定义Excel样式辅助函数\r\nexport function applyExcelStyles(ws: any, data: any[][]) {\r\n  // 定义通用样式\r\n  const styles = {\r\n    header: {\r\n      font: { bold: true, sz: 12, color: { rgb: \"FFFFFF\" } },\r\n      fill: { fgColor: { rgb: \"4472C4\" } },\r\n      alignment: { horizontal: \"center\", vertical: \"center\", wrapText: true },\r\n      border: {\r\n        top: { style: 'medium', color: { rgb: '366092' } },\r\n        right: { style: 'thin', color: { rgb: '366092' } },\r\n        bottom: { style: 'medium', color: { rgb: '366092' } },\r\n        left: { style: 'thin', color: { rgb: '366092' } }\r\n      }\r\n    },\r\n    title: {\r\n      font: { bold: true, sz: 18, color: { rgb: \"000000\" } },\r\n      alignment: { horizontal: \"center\", vertical: \"center\" },\r\n      border: {\r\n        top: { style: 'thin', color: { rgb: 'CCCCCC' } },\r\n        bottom: { style: 'thin', color: { rgb: 'CCCCCC' } }\r\n      }\r\n    },\r\n    metadata: {\r\n      font: { sz: 11, color: { rgb: \"333333\" } },\r\n      alignment: { horizontal: \"left\", vertical: \"center\" },\r\n      border: { \r\n        top: { style: 'thin', color: { rgb: 'EEEEEE' } },\r\n        right: { style: 'thin', color: { rgb: 'EEEEEE' } },\r\n        bottom: { style: 'thin', color: { rgb: 'EEEEEE' } },\r\n        left: { style: 'thin', color: { rgb: 'EEEEEE' } }\r\n      }\r\n    },\r\n    cell: {\r\n      font: { sz: 11, color: { rgb: \"333333\" } },\r\n      alignment: { vertical: \"center\", wrapText: true },\r\n      border: {\r\n        top: { style: 'thin', color: { rgb: 'DDDDDD' } },\r\n        right: { style: 'thin', color: { rgb: 'DDDDDD' } },\r\n        bottom: { style: 'thin', color: { rgb: 'DDDDDD' } },\r\n        left: { style: 'thin', color: { rgb: 'DDDDDD' } }\r\n      }\r\n    },\r\n    oddRow: {\r\n      fill: { fgColor: { rgb: \"E9EDF4\" } }\r\n    },\r\n    evenRow: {\r\n      fill: { fgColor: { rgb: \"FFFFFF\" } }\r\n    },\r\n    summary: {\r\n      font: { bold: true, sz: 11, color: { rgb: \"000000\" } },\r\n      alignment: { horizontal: \"right\", vertical: \"center\" },\r\n      border: {\r\n        top: { style: 'medium', color: { rgb: 'CCCCCC' } },\r\n        bottom: { style: 'medium', color: { rgb: 'CCCCCC' } }\r\n      }\r\n    }\r\n  };\r\n\r\n  // 判断表格结构\r\n  if (!data || data.length === 0) return ws;\r\n\r\n  // 查找标题行和数据行范围\r\n  const headerRowIndex = findHeaderRowIndex(data);\r\n  const dataInfo = analyzeDataStructure(data, headerRowIndex);\r\n\r\n  // 应用样式到标题区域\r\n  if (dataInfo.titleRowIndex >= 0) {\r\n    for (let r = 0; r <= dataInfo.titleRowIndex; r++) {\r\n      for (let c = 0; c < (data[r] ? data[r].length : 0); c++) {\r\n        const cellRef = XLSX.utils.encode_cell({ r, c });\r\n        if (!ws[cellRef]) continue;\r\n        \r\n        if (r === 0 && c === 0) {\r\n          // 报表标题\r\n          ws[cellRef].s = styles.title;\r\n        } else {\r\n          // 元数据\r\n          ws[cellRef].s = styles.metadata;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // 应用样式到表头\r\n  if (headerRowIndex >= 0) {\r\n    for (let c = 0; c < data[headerRowIndex].length; c++) {\r\n      const cellRef = XLSX.utils.encode_cell({ r: headerRowIndex, c });\r\n      if (!ws[cellRef]) continue;\r\n      ws[cellRef].s = styles.header;\r\n    }\r\n  }\r\n\r\n  // 应用样式到数据行\r\n  for (let r = headerRowIndex + 1; r <= dataInfo.dataEndRowIndex; r++) {\r\n    const isAlternateRow = (r - headerRowIndex) % 2 === 1;\r\n    \r\n    for (let c = 0; c < (data[r] ? data[r].length : 0); c++) {\r\n      const cellRef = XLSX.utils.encode_cell({ r, c });\r\n      if (!ws[cellRef]) continue;\r\n      \r\n      // 检查是否是数字\r\n      const isNumber = isNumericCell(data[r][c]);\r\n      \r\n      // 合并基础样式与行样式\r\n      ws[cellRef].s = {\r\n        ...styles.cell,\r\n        ...(isAlternateRow ? styles.oddRow : styles.evenRow),\r\n        alignment: { \r\n          ...styles.cell.alignment,\r\n          horizontal: isNumber ? \"right\" : \"left\"\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  // 应用样式到汇总行\r\n  if (dataInfo.summaryRowIndices.length > 0) {\r\n    for (const r of dataInfo.summaryRowIndices) {\r\n      for (let c = 0; c < (data[r] ? data[r].length : 0); c++) {\r\n        const cellRef = XLSX.utils.encode_cell({ r, c });\r\n        if (!ws[cellRef]) continue;\r\n        ws[cellRef].s = styles.summary;\r\n      }\r\n    }\r\n  }\r\n\r\n  return ws;\r\n}\r\n\r\n// 辅助函数：查找表头行\r\nfunction findHeaderRowIndex(data: any[][]): number {\r\n  // 如果数据少于3行，假设没有表头\r\n  if (data.length < 3) return 0;\r\n  \r\n  // 通常表头行是有固定列数的一行，位于顶部附近\r\n  for (let i = 0; i < Math.min(10, data.length - 1); i++) {\r\n    if (data[i] && data[i+1] && \r\n        data[i].length === data[i+1].length && \r\n        data[i].length >= 3) {\r\n      return i;\r\n    }\r\n  }\r\n  \r\n  // 默认返回第一行\r\n  return 0;\r\n}\r\n\r\n// 辅助函数：分析数据结构\r\nfunction analyzeDataStructure(data: any[][], headerRowIndex: number) {\r\n  const result = {\r\n    titleRowIndex: -1,\r\n    dataEndRowIndex: data.length - 1,\r\n    summaryRowIndices: [] as number[]\r\n  };\r\n  \r\n  // 查找标题行\r\n  if (headerRowIndex > 0) {\r\n    result.titleRowIndex = 0;\r\n  }\r\n  \r\n  // 查找汇总行和数据结束行\r\n  for (let r = data.length - 1; r > headerRowIndex; r--) {\r\n    const row = data[r];\r\n    if (!row || row.length === 0) continue;\r\n    \r\n    // 检查是否是汇总行\r\n    let isSummaryRow = false;\r\n    for (let c = 0; c < row.length; c++) {\r\n      const cell = row[c];\r\n      if (cell && typeof cell === 'string' && \r\n          (cell.includes('合计') || cell.includes('总计') || \r\n           cell.includes('汇总') || cell.includes('小计'))) {\r\n        isSummaryRow = true;\r\n        result.summaryRowIndices.push(r);\r\n        break;\r\n      }\r\n    }\r\n    \r\n    // 如果不是汇总行，可能是最后一行数据\r\n    if (!isSummaryRow && result.dataEndRowIndex === data.length - 1) {\r\n      result.dataEndRowIndex = r;\r\n    }\r\n  }\r\n  \r\n  return result;\r\n}\r\n\r\n// 辅助函数：判断单元格是否包含数字\r\nfunction isNumericCell(value: any): boolean {\r\n  if (value === null || value === undefined) return false;\r\n  if (typeof value === 'number') return true;\r\n  \r\n  if (typeof value === 'string') {\r\n    const trimmed = value.trim();\r\n    if (trimmed === '') return false;\r\n    \r\n    // 检查是否是数字格式\r\n    return !isNaN(Number(trimmed)) && \r\n           !isNaN(parseFloat(trimmed)) &&\r\n           !trimmed.includes(' '); // 不包含空格\r\n  }\r\n  \r\n  return false;\r\n}\r\n","/**\r\n * 修复PDF导出异常的补丁文件\r\n * 导入到主项目中以解决PDF导出的问题\r\n */\r\n\r\n// 修复PDF导出时的分页问题\r\nexport function fixPDFExport() {\r\n  try {\r\n    console.log('PDF导出修复已应用 (使用内置jsPDF)');\r\n\r\n    // 由于jsPDF现在是通过ES模块导入的，修复逻辑已经简化\r\n    // 主要的修复已经在主导出逻辑中处理\r\n\r\n    console.log('PDF导出修复已成功应用');\r\n  } catch (e) {\r\n    console.warn('应用PDF修复时发生错误:', e);\r\n  }\r\n}\r\n\r\n// 导出中文支持的辅助函数\r\nexport function setupChineseSupport(pdf: any) {\r\n  try {\r\n    // 设置默认字体\r\n    pdf.setFont('helvetica');\r\n\r\n    // 优化中文处理\r\n    const encodingFallback = function(text: string) {\r\n      try {\r\n        // 简单替换一些中文标点符号为英文标点\r\n        return text\r\n          .replace(/：/g, ':')\r\n          .replace(/，/g, ',')\r\n          .replace(/。/g, '.')\r\n          .replace(/（/g, '(')\r\n          .replace(/）/g, ')')\r\n          .replace(/；/g, ';');\r\n      } catch (e) {\r\n        return text;\r\n      }\r\n    };\r\n\r\n    // 保存原始的text方法\r\n    const originalText = pdf.text;\r\n\r\n    // 覆盖text方法，添加中文处理\r\n    pdf.text = function(text: string, x: number, y: number, options?: any) {\r\n      try {\r\n        // 尝试使用原始方法\r\n        return originalText.call(this, encodingFallback(text), x, y, options);\r\n      } catch (e) {\r\n        console.warn('文字渲染失败:', e);\r\n        // 如果失败，尝试直接渲染ASCII字符\r\n        const asciiOnly = text.replace(/[^\\x00-\\x7F]/g, '?');\r\n        return originalText.call(this, asciiOnly, x, y, options);\r\n      }\r\n    };\r\n\r\n    return pdf;\r\n  } catch (e) {\r\n    console.warn('中文支持设置失败:', e);\r\n    return pdf;\r\n  }\r\n}\r\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","_","label","sent","trys","ops","g","create","Iterator","verb","Symbol","iterator","v","op","TypeError","pop","push","SuppressedError","DDR","XLSXStyle","options","data","metadata","pagination","filters","eventListeners","Map","formatters","initialized","container","el","document","querySelector","Error","concat","HTMLElement","classList","add","theme","globalFormatters","instance","init","catch","error","onError","console","registerFormatter","name","formatter","_a","_loadConfig","config","_b","_fetchData","dataSource","apiResponse","records","_render","_emitEvent","onLoad","error_1","reload","params","error_2","refreshMetadata","metadataSource","_fetchMetadata","response","_renderHeaderFooter","error_3","updateMetadata","exportTo","type","index","Exporter","toExcel","toPDF","fileName","meta","error_4","destroy","innerHTML","clear","setFilter","on","event","callback","has","set","get","off","callbacks","indexOf","splice","print","style","createElement","textContent","head","appendChild","window","removeChild","getData","to","from","pack","ar","l","Array","slice","__spreadArray","getMetadata","_getValueByPath","path","split","reduce","acc","part","undefined","startsWith","fetch","ok","statusText","json","error_5","message","String","extraParams","mock","debug","location","hostname","method","headers","JSON","stringify","url","api","keys","queryParams_1","URLSearchParams","entries","forEach","key","append","toString","success","code","queryParams_2","wrapper","className","layout","height","bordered","renderMode","_determineRenderMode","setAttribute","_renderCanvas","_renderDOM","features","watermark","_addWatermark","oldHeader","oldFooter","header","_createHeader","insertBefore","firstChild","ResizeObserver","entries_1","_i","headerHeight_1","contentRect","setProperty","tableContainer_1","marginTop","maxHeight","observe","headerHeight","getBoundingClientRect","tableContainer","footer","_createFooter","nextSibling","headerConfig","_this","headerElement","minHeight","topContainer","logo","logoContainer","position","logoImg","alt","src","metadataKey","width","centerContainer","title","titleText","metadataPath","text","titleElement","subtitle","subtitleElement","fields","fieldsContainer","leftFields_1","rightFields_1","field","fieldElement","labelElement","valueElement","footerConfig","footerElement","fixed","summary","summaryElement_1","summaryConfig","summaryItem","column","summaryValue","_calculateSummary","fieldsContainer_1","signatures","signaturesElement_1","signature","signatureItem","nameElement","showTimestamp","dateElement","timestamp","dateMetadataPath","Date","toLocaleDateString","notes","notesElement","pageInfo","pageElement","pageText","format","replace","pageNumber","totalPages","values","map","item","sum","val","mode","entries_2","entry","target","updateHeaderSize","addEventListener","tableWrapper","table","stripe","hover","thead","_createTableHeader","columns","tbody","_createTableBody","paginationElement","_createPagination","placeholder","log","rowCount","_calculateHeaderRowCount","rows","fill","tr","_fillHeaderCells","row","maxDepth","traverse","cols","currentDepth","col","children","Math","max","rowIndex","colIndex","currentColIndex","cell","align","textAlign","childColSpan","colSpan","rowSpan","flatColumns","_getFlatColumns","emptyRow","emptyCell","emptyText","rowData","visible","merge","formatterFunc","conditional","condition","valueToCheck","_evaluateCondition","when","context","expression_1","rowVarMatches","match","prop","Function","flatten","prevBtn","disabled","onclick","currentPage","startPage","endPage","min","pageBtn","nextBtn","sizeSelect","size","option","selected","pageSize","onchange","Number","existingWatermark","zIndex","includes","content","opacity","color","fontSize","defineProperty","writable","MutationObserver","mutations","mutation","removedNodes","some","node","Element","contains","newWatermark_1","cloneNode","setTimeout","attributeName","childList","subtree","attributes","attributeFilter","_prepareExportData","visibleColumns","filter","includeHidden","includeHeader","showOnExport","_d","_c","includeFooter","_e","_g","_f","_j","_h","_l","_k","signatureRow_1","_m","date","currency","locale","Intl","NumberFormat","number","precision","thousandSeparator","minimumFractionDigits","maximumFractionDigits","useGrouping","percentage","applyExcelStyles","ws","styles","font","bold","sz","rgb","fgColor","alignment","horizontal","vertical","wrapText","border","top","right","bottom","left","oddRow","evenRow","headerRowIndex","findHeaderRowIndex","dataInfo","titleRowIndex","dataEndRowIndex","summaryRowIndices","r","isSummaryRow","c","analyzeDataStructure","cellRef","XLSX","utils","encode_cell","isAlternateRow","isNumber","isNumericCell","trimmed","trim","isNaN","parseFloat","require","warn","fixPDFExport","sheetName","excelData","domElement","extractDataFromDOM","ws_1","aoa_to_sheet","wscols","maxWidth","wch","dataRows","hasDOMElement","firstRow","lastRow","applyEnhancedStylesToExcel","enhancedError","applyBasicStylesToExcel","wb","book_new","book_append_sheet","Workbook","Views","RTL","hasStyles","sampleCells_1","Props","Title","Subject","Author","CreatedDate","writeOptions","bookType","cellStyles","sheetStubs","compression","excelBuffer","write","blob","Blob","URL","createObjectURL","link","href","download","click","revokeObjectURL","blobError","writeFile","fallbackError","element","fieldsElements","querySelectorAll","metadataRow_1","cells","summaryElements","summaryRow_1","footerFields","footerRow_1","applyDOMStylesToExcel","hasTitle","hasMetadata","currentRowIndex_1","headerStyle_1","dataStyle_1","isFirstRow_1","isHeader","cellIndex","excelRowIndex","range","decode_range","headerStyle","dataStyle","alternateRowStyle","rowStyle","rgbToHex","parseInt","padStart","toUpperCase","getExcelAlignment","pdf","pdfOptions","configPdfSettings","pdfConfig","mergedPdfOptions","orientation_1","orientation","quality","multiPage","relayout","margins","originalScrollTop","scrollTop","tempContainer","overflow","contentWidthMm","dpiRatio","contentWidthPx","floor","tableElem","tableLayout","padding","clientWidth","tableElement","setFont","originalText_1","x","encodingFallback_1","asciiOnly","setupChineseSupport","jsPDF","unit","pageWidth","internal","getWidth","pageHeight","getHeight","contentHeight","contentWidth","setFontSize","headerCanvas","headerRect","round","html2canvas","scale","useCORS","logging","allowTaint","backgroundColor","e_1","footerHeight","footerCanvas","footerRect","e_2","tableRect","tableCanvas","tableWidth","tableHeight","totalRows","headerRowCount","dataRowCount","pageBreakPoints","actualHeaderHeightMM","actualFooterHeightMM","avgRowHeightCanvas","dataRowHeightMM","firstPageBaseHeight","middlePageBaseHeight","firstPageDataHeight","middlePageDataHeight","lastPageDataHeight","firstPageMaxRows","middlePageMaxRows","lastPageMaxRows","processedRows","pageIndex","maxRowsThisPage","remainingRows","rowsThisPage","breakYPercent","headerHeightRatio","processedRowsRatio","dataAreaHeightRatio","yPercent","endRow","pagesNeeded","headerImgData","toDataURL","footerImgData","lastPageRows","lastPageRemainingHeight","lastPageDataHeightUsed","page","addPage","yOffset","addImage","tableStartPercent","tableEndPercent","startRow","sourceY","sourceHeight","tablePartHeight","endPercent","startPercent","ceil","maxAllowedHeight","pageTableCanvas","pageTableCtx","getContext","drawImage","pageTableImgData","setTextColor","pageNumberY","minFooterY","maxFooterY","footerY","newPageNumber","watermarkCanvas","ctx","fillStyle","textBaseline","translate","rotate","PI","fillText","watermarkImgData","watermarkX","watermarkY","canvasError","baseline","angle","textError","watermarkError","e_3","canvas","imgData","canvasAspectRatio","pageAspectRatio","imgWidth","imgHeight","save"],"mappings":"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"}