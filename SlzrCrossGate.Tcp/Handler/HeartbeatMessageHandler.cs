using Microsoft.Extensions.Logging;
using SlzrCrossGate.Tcp.Protocol;
using System.Threading.Tasks;

namespace SlzrCrossGate.Tcp.Handler
{
    [MessageType("0880")]
    public class HeartbeatMessageHandler : IIso8583MessageHandler
    {
        private readonly ILogger<HeartbeatMessageHandler> _logger;
        private readonly Iso8583Schema _schema;

        public HeartbeatMessageHandler(ILogger<HeartbeatMessageHandler> logger, Iso8583Schema schema)
        {
            _logger = logger;
            _schema = schema;
        }

        public async Task HandleMessageAsync(TcpConnectionContext context, Iso8583Package message)
        {
            // 处理心跳指令
            _logger.LogInformation("处理心跳指令");

            // 获取终端ID
            var terminalId = message.GetString(41); // 假设终端ID在41域

            // 记录心跳日志
            _logger.LogInformation($"终端 {terminalId} 发送心跳");

            // 发送心跳响应
            var response = new Iso8583Package(_schema);
            response.MessageType = "0890"; // 假设响应类型为0810
            response.SetString(39, "00"); // 假设39域表示响应码，00表示成功
            response.SetString(41, terminalId); // 终端ID

            var responseBytes = response.PackSendBuffer();

            await context.Transport.Output.WriteAsync(responseBytes);

            await Task.CompletedTask;
        }
    }
}

