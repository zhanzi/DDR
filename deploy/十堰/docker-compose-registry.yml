

services:
  # MinIO 对象存储
  minio:
    image: devtest.pointlife365.net:5180/library/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin123}
    ports:
      - "9000:9000"   # MinIO API端口
      - "9001:9001"   # MinIO Console端口
    networks:
      - slzr-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  api-service:
    image: devtest.pointlife365.net:5180/slzr/tcpserver-api:latest
    container_name: tcpserver-api
    #deploy:
      #replicas: 2  # 启动 1 个副本
    #  resources:
    #    limits:
    #      cpus: "4.0"  # 4 核 CPU
    #      memory: 8G    # 8GB 内存
    extra_hosts:  # 添加宿主机IP的DNS映射
      - "host.docker.internal:host-gateway"
    #depends_on:
    #  rabbitmq:
    #    condition: service_healthy
    #   mysql:
    #     condition: service_healthy
    #ports:
    #  - "6000:8000"  # HTTP API (通过nginx代理)
    #  - "8822:8001"  # TCP 服务 (通过nginx代理)
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - HTTP_PORT=8000
      - TCP_PORT=8001
      - ConnectionStrings__DefaultConnection=Server=192.168.54.17;Port=3306;Database=tcpserver;User=test;Password=${MYSQL_ROOT_PASSWORD:-slzr!12345};SslMode=Required;
      - DatabaseProvider=MySql
      - RabbitMQ__HostName=192.168.54.16
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=${RABBITMQ_USER:-guest}
      - RabbitMQ__Password=${RABBITMQ_PASS:-guest}
      - FileService__DefaultStorageType=${FILE_STORAGE_TYPE:-MinIO}
      - FileService__LocalFilePath=/app/storage/files
      - FileService__MinIO__Endpoint=minio:9000
      - FileService__MinIO__AccessKey=${MINIO_ROOT_USER:-minioadmin}
      - FileService__MinIO__SecretKey=${MINIO_ROOT_PASSWORD:-minioadmin123}
      - FileService__MinIO__BucketName=${MINIO_BUCKET_NAME:-slzr-files}
      - TZ=Asia/Shanghai
    volumes:
      - api_storage:/app/storage
      - /etc/localtime:/etc/localtime:ro  # 挂载宿主机时区文件
    networks:
      - slzr-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]  # 与HTTP_PORT环境变量保持一致
      interval: 30s
      timeout: 10s
      retries: 3

  # WebAdmin 服务
  web-admin:
    image: devtest.pointlife365.net:5180/slzr/tcpserver-web:latest
    container_name: tcpserver-web
    #deploy:
    #  replicas: 1  # 启动副本数量，使用多副本时，需要删除容器名称，因为多副本时不能指定唯一容器名。
    extra_hosts:  # 添加宿主机IP的DNS映射
      - "host.docker.internal:host-gateway"
    #depends_on:
    #  rabbitmq:
    #    condition: service_healthy
    #   mysql:
    #     condition: service_healthy
    #ports:
    #  - "18822:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=192.168.54.17;Port=3306;Database=tcpserver;User=test;Password=${MYSQL_ROOT_PASSWORD:-slzr!12345};SslMode=Required;
      - RabbitMQ__HostName=192.168.54.16
      - RabbitMQ__UserName=${RABBITMQ_USER:-guest}
      - RabbitMQ__Password=${RABBITMQ_PASS:-guest}
      - Jwt__Key=${JWT_KEY:-YourSecretKeyHere12345678901234567890}
      - FileService__DefaultStorageType=${FILE_STORAGE_TYPE:-MinIO}
      - FileService__LocalFilePath=/app/storage/files
      - FileService__MinIO__Endpoint=minio:9000
      - FileService__MinIO__AccessKey=${MINIO_ROOT_USER:-minioadmin}
      - FileService__MinIO__SecretKey=${MINIO_ROOT_PASSWORD:-minioadmin123}
      - FileService__MinIO__BucketName=${MINIO_BUCKET_NAME:-slzr-files}
      - TZ=Asia/Shanghai
    volumes:
      - /etc/localtime:/etc/localtime:ro  # 挂载宿主机时区文件
      - webadmin_storage:/app/storage
      - webadmin_keys:/app/Keys
    networks:
      - slzr-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx 反向代理
  nginx:
    image: devtest.pointlife365.net:5180/library/nginx:latest
    container_name: nginx
    depends_on:
      - api-service
      - web-admin
    ports:
      - "18822:80"          # HTTP代理
      - "8822:8823"        # TCP代理端口（如果需要的话）
      # - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # 挂载主配置文件
      # - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    networks:
      - slzr-network
    restart: unless-stopped

networks:
  slzr-network:
    driver: bridge

volumes:
  mysql_data:
  rabbitmq_data:
  rabbitmq_logs:
  minio_data:
  api_storage:
  webadmin_storage:
  webadmin_keys:
