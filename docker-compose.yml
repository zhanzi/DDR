version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: slzr-mysql
    command: --defaults-file=/etc/mysql/my.cnf
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-slzr!12345}
      MYSQL_DATABASE: tcpserver
    ports:
      - "3306:3306"
    networks:
      - slzr-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-slzr!12345}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ 消息队列
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: slzr-rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS:-guest}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - slzr-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ApiService 服务
  api-service:
    build:
      context: .
      dockerfile: SlzrCrossGate.ApiService/Dockerfile
    container_name: slzr-api-service
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "5000:8000"  # HTTP API
      - "5001:8001"  # TCP 服务
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - HTTP_PORT=8000
      - TCP_PORT=8001
      - ConnectionStrings__DefaultConnection=Server=mysql;Port=3306;Database=tcpserver;User=root;Password=${MYSQL_ROOT_PASSWORD:-slzr!12345};SslMode=Required;AllowLoadLocalInfile=true;
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__UserName=${RABBITMQ_USER:-guest}
      - RabbitMQ__Password=${RABBITMQ_PASS:-guest}
    volumes:
      - api_storage:/app/storage
    networks:
      - slzr-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # WebAdmin 服务
  web-admin:
    build:
      context: .
      dockerfile: SlzrCrossGate.WebAdmin/Dockerfile
    container_name: slzr-web-admin
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8080:80"   # HTTP端口映射
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=mysql;Port=3306;Database=tcpserver;User=root;Password=${MYSQL_ROOT_PASSWORD:-slzr!12345};SslMode=Required;AllowLoadLocalInfile=true;
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__UserName=${RABBITMQ_USER:-guest}
      - RabbitMQ__Password=${RABBITMQ_PASS:-guest}
      - Jwt__Key=${JWT_KEY:-YourSecretKeyHere12345678901234567890}
    volumes:
      - webadmin_storage:/app/storage
      - webadmin_keys:/app/Keys
    networks:
      - slzr-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx 反向代理
  nginx:
    image: nginx:latest
    container_name: slzr-nginx
    depends_on:
      - api-service
      - web-admin
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    networks:
      - slzr-network
    restart: unless-stopped

networks:
  slzr-network:
    driver: bridge

volumes:
  mysql_data:
  rabbitmq_data:
  api_storage:
  webadmin_storage:
  webadmin_keys: